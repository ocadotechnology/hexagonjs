@prototype hx.Form
  @bugfix 2.3.1
    @description
      Resolved an issue where the buttons were moved to the top of the form

  @bugfix 2.2.0
    @description
      Resolved an issue where elements added with @code[addButton] could not be retrieved with @code[.node(...)]

  @bugfix 2.0.2
    @description
      Resolved an issue where a text field with an autocompelete was incorrectly wrapped with a div, breaking the alignment of the form.

  @bugfix 1.2.0
    @description
      Updated the hidden/disabled state for properties so they can be hidden/disabled when added using the options and also using the hidden/disabled methods after they have been added.

  @updated 1.4.0
    @issue 211
    @description
      Updated the error text to use the user facing text module

  @bugfix 1.10.0
    @issue 359
    @description
      Resolved an issue when attempting to add fields that are disabled/hidden as their initial state

  @bugfix 1.10.0
    @issue 368
    @description
      Resolved an issue where disabled form fields would not return their value when using the value or data method.

  @description
    Used for building forms.

  @extends EventEmitter
  @constructor
    @removed 2.2.0
      @description
        Added options argument to constructor
    @description
      Creates a new Form object that is linked to a form element on the page.

    @arg selector [HTMLElement/String]
      @description
        An HTMLElement or CSS selector that uniquely identifies your form.

  @constructor
    @added 2.2.0
      @description
        Added options argument to constructor

    @description
      Creates a new Form object that is linked to a form element on the page.

    @arg selector [HTMLElement/String]
      @description
        An HTMLElement or CSS selector that uniquely identifies your form.

    @arg? options [Object]
      @property featureFlags [Object]
        @property useUpdatedStructure [Boolean]
          @description
            Whether to use the updated form structure

          @default: false

        @property displayVertical [Boolean]
          @description
            Whether to display the form fields stacked vertically or horizontally depending on whether the area for the form is a narrow column or a full-width page.

            Only applies when useUpdatedStructure is true. Default displays the form horizontally.

          @default: false

  @method getData
    @deprecated 0.11.0
      @description
        Use @code[data()] instead.

    @removed 0.12.0
    @description
      Returns the data in the form as an object

  @method submit
    @description
      Force the form to emit a 'submit' event.

    @returns [Form]
      @added 0.13.0
      @description
        This Form

  @method fill
    @deprecated 0.11.0
      @description
        Use @code[data(data)] instead.

    @removed 0.12.0
    @description
      Fill the form with some data.

    @arg data [Object]
      @description
        The values to fill the form with. The expected format of the data is a an object where the keys match the labels, and the values are the values to set the input to:
        @@codeblock js
          {
            'Field 1': 25,
            'Field 2': 'green',
            'Field 3': true,
            'Field 4': 'Two'
          }

  @group Add Component Methods
    @description
      Methods that add components to the form

    @method addSubmit
      @removed 0.15.2
        @description
          Replaced with @code[addSubmit(text, icon, submitAction)]

      @description
        Adds a submit button to the form

      @arg text [String]
        @description
          The text to give the button

      @arg icon [String]
        @description
          The icon class for the button's icon

      @returns [Form]
        @description
          This Form

    @method addText
      @updated 2.0.0
      @bugfix 2.0.1
        @description
          Fixed an issue where the autocomplete data and options were incorrectly removed instead of deprecated

      @description
        Adds a text field to the form.

      @arg name [String]
        @description
          The field name.

      @arg? options [Object]
        @description
          The options to use when creating the text field.

        @property required [Boolean]
          @description
            Whether or not this is a required field.

        @property placeholder [String]
          @description
            The placeholder text to use - this will appear as a greyed out suggestion/hint in the input box.

        @property type [String]
          @description
            The type of text field - the default is 'text'.

        @property attrs [Array]
          @description
            Additional attributes to give the text input. This should be an array of objects with type and value properties.

        @property autoCompleteData [Data/Function]
          @bugfix 2.0.1
            @description
              Added the deprecated warning and fallback in to handle the deprecation
          @deprecated 2.0.0
            @description
              This option has been replaced with the lowercase variant @code[autocompleteData]
          @description
            The data to use for auto complete suggestions. Can be either an array of data or a function that returns data. For a more detailed explanation, see the Auto Complete page.

        @property autoCompleteOptions [Object]
          @bugfix 2.0.1
            @description
              Added the deprecated warning and fallback in to handle the deprecation
          @deprecated 2.0.0
            @description
              This option has been replaced with the lowercase variant @code[autocompleteOptions]
          @description
            The options to use for the auto complete. For a more detailed explanation, see the Auto Complete page.

        @property autocompleteData [Data/Function]
          @bugfix 2.0.1
            @description
              Added the deprecated warning and fallback in to handle the deprecation
          @added 2.0.0
          @description
            The data to use for auto complete suggestions. Can be either an array of data or a function that returns data. For a more detailed explanation, see the Autocomplete.

        @property autocompleteOptions [Object]
          @bugfix 2.0.1
            @description
              Added the deprecated warning and fallback in to handle the deprecation
          @added 2.0.0
          @description
            The options to use for the auto complete. For a more detailed explanation, see the Autocomplete page.

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property validator [Function]
          @description
            A function that is called when the 'oninput' function is called. It is passed the event object and should return an error message as a string:
            @@codeblock js
              var validator = function(e){
                if(e.target.value.length < 5){
                  "Please enter text longer than 5 characters"
                }
              }

          @arg event [Event]
            @description
              The input event that was emiited by the input element.

          @returns [String]
            @description
              The error string to display if the string did not validate, or undefined if the contents of the input was valid.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property hidden [Boolean]
          @added 1.2.0
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

        @property value [Any]
          @added 1.14.0
            @issue 387
            @description
              Added the ability to initialise fields with a value

          @description
            The value to set for this field

      @returns [Form]
        @description
          This Form

    @method addEmail
      @description
        Adds an email field to the form.

      @arg name [String]
        @description
          The field name.

      @arg? options [Object]
        @description
          The options to use when creating the email field.

        @property required [Boolean]
          @description
            Whether or not this is a required field.

        @property placeholder [String]
          @description
            The placeholder text to use - this will appear as a greyed out suggestion/hint in the input box.

        @property attrs [Array]
          @description
            Additional attributes to give the text input. This should be an array of objects with type and value properties.

        @property autoCompleteData [Data/Function]
          @description
            The data to use for auto complete suggestions. Can be either an array of data or a function that returns data. For a more detailed explanation, see the Auto Complete page.

        @property autoCompleteOptions [Object]
          @description
            The options to use for the auto complete. For a more detailed explanation, see the Auto Complete page.

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property validator [Function]
          @description
            A function that is called when the 'oninput' function is called. It is passed the event object and should return an error message as a string:
            @@codeblock js
              var validator = function(e){
                if(e.target.value.length < 5){
                  "Please enter text longer than 5 characters"
                }
              }

          @arg event [Event]
            @description
              The input event that was emiited by the input element.

          @returns [String]
            @description
              The error string to display if the string did not validate, or undefined if the contents of the input was valid.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property hidden [Boolean]
          @added 1.2.0
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

        @property value [Any]
          @added 1.14.0
            @issue 387
            @description
              Added the ability to initialise fields with a value

          @description
            The value to set for this field

      @returns [Form]
        @description
          This Form

    @method addNumber
      @description
        Adds a number field to the form.

      @arg name [String]
        @description
          The field name.

      @arg? options [Object]
        @description
          The options to use when creating the number field.

        @property required [Boolean]
          @description
            Whether or not this is a required field.

        @property placeholder [String]
          @description
            The placeholder text to use - this will appear as a greyed out suggestion/hint in the input box.

        @property step [Number]
          @description
            Specifies the legal number intervals for the input field. The default is 'any'.

        @property min [Number]
          @description
            The minimum value the number input should allow. By default there is no minimum.

        @property max [Number]
          @description
            The maximum value the number input should allow. By default there is no maximum.

        @property attrs [Array]
          @description
            Additional attributes to give the text input. This should be an array of objects with type and value properties.

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property validator [Function]
          @description
            A function that is called when the 'oninput' function is called. It is passed the event object and should return an error message as a string:

            @@codeblock js
              var validator = function(e){
                if(e.target.value.length < 5){
                  "Please enter text longer than 5 characters"
                }
              }

          @arg event [Event]
            @description
              The input event that was emiited by the input element.

          @returns [String]
            @description
              The error string to display if the string did not validate, or undefined if the contents of the input was valid.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property hidden [Boolean]
          @added 1.2.0
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

        @property value [Any]
          @added 1.14.0
            @issue 387
            @description
              Added the ability to initialise fields with a value

          @description
            The value to set for this field

      @returns [Form]
        @description
          This Form

    @method addPassword
      @description
        Adds a password field to the form.

      @arg name [String]
        @description
          The field name.

      @arg? options [Object]
        @description
          The options to use when creating the password field.

        @property required [Boolean]
          @description
            Whether or not this is a required field.

        @property placeholder [String]
          @description
            The placeholder text to use - this will appear as a greyed out suggestion/hint in the input box.

        @property attrs [Array]
          @description
            Additional attributes to give the text input. This should be an array of objects with type and value properties.

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property validator [Function]
          @description
            A function that is called when the 'oninput' function is called. It is passed the event object and should return an error message as a string:
            @@codeblock js
              var validator = function(e){
                if(e.target.value.length < 5){
                  "Please enter text longer than 5 characters"
                }
              }

          @arg event [Event]
            @description
              The input event that was emiited by the input element.

          @returns [String]
            @description
              The error string to display if the string did not validate, or undefined if the contents of the input was valid.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property hidden [Boolean]
          @added 1.2.0
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

        @property value [Any]
          @added 1.14.0
            @issue 387
            @description
              Added the ability to initialise fields with a value

          @description
            The value to set for this field

      @returns [Form]
        @description
          This Form

    @method addUrl
      @description
        Adds a url field to the form. The url field only allows addresses with the http:// or https:// prefix, for other url types, a text field should be used with a custom validator.

      @arg name [String]
        @description
          The field name.

      @arg? options [Object]
        @description
          The options to use when creating the email field.

        @property required [Boolean]
          @description
            Whether or not this is a required field.

        @property placeholder [String]
          @description
            The placeholder text to use - this will appear as a greyed out suggestion/hint in the input box.

        @property attrs [Array]
          @description
            Additional attributes to give the text input. This should be an array of objects with type and value properties.

        @property autoCompleteData [Data/Function]
          @description
            The data to use for auto complete suggestions. Can be either an array of data or a function that returns data. For a more detailed explanation, see the Auto Complete page.

        @property autoCompleteOptions [Object]
          @description
            The options to use for the auto complete. For a more detailed explanation, see the Auto Complete page.

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property validator [Function]
          @description
            A function that is called when the 'oninput' function is called. It is passed the event object and should return an error message as a string:
            @@codeblock js
              var validator = function(e){
                if(e.target.value.length < 5){
                  "Please enter text longer than 5 characters"
                }
              }

          @arg event [Event]
            @description
              The input event that was emiited by the input element.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property hidden [Boolean]
          @added 1.2.0
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

        @property value [Any]
          @added 1.14.0
            @issue 387
            @description
              Added the ability to initialise fields with a value

          @description
            The value to set for this field

      @returns [Form]
        @description
          This Form

    @method addSelect
      @updated 0.11.0
        @description
          Updated the form builder to use the new hx.Select element.

      @removed 0.15.0
        @description
          Use addPicker instead. options.selectOptions has also be renamed to options.pickerOptions.

      @description
        Adds a dropdown select input to the form.

      @arg name [String]
        @description
          The field name.

      @arg values [Array[String]]
        @description
          An array of the possible options in the dropdown.

      @arg? options [Object]
        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property required [Boolean]
          @description
            Whether or not this is a required field.

            When the value is 'false', the select object will start with a blank value but is not required to be selected.

            When the value is 'true', the select object will start with a blank value and will not validate until a user has selected an option.

            When the value is not defined, the dropdown behaves as normal.

        @property disabled [Boolean]
          @added 0.12.0
          @description
            Whether the field should have the disabled attribute.

        @property selectOptions [Object]
          @added 0.13.0
          @description
            The options to use for the select component. See the @hyperlink(../select/)[select] constructor for the available options.

      @returns [Form]
        @description
          This Form

    @method addCheckbox
      @description
        Adds a checkbox field to the form

      @arg name [String]
        @description
          The field name.

      @arg? options [Object]
        @description
          The options to use when adding the checkbox

        @property required [Boolean]
          @description
            Whether or not this is a required field. The default is false. If set to required, the user must tick the box before the form can be submitted.

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property hidden [Boolean]
          @added 1.2.0
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

        @property value [Any]
          @added 1.14.0
            @issue 387
            @description
              Added the ability to initialise fields with a value

          @description
            The value to set for this field

      @returns [Form]
        @description
          This Form

    @method addRadio
      @description
        Adds a radio field to the form.

      @arg name [String]
        @description
          The field name.

      @arg values [Array[String]]
        @description
          An array that contains the list of labels for the radio options.

      @arg? options [Object]
        @description
          The options to use when adding the radio.

        @property required [Boolean]
          @description
            Whether or not this is a required field

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property hidden [Boolean]
          @added 1.2.0
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

        @property value [Any]
          @added 1.14.0
            @issue 387
            @description
              Added the ability to initialise fields with a value

          @description
            The value to set for this fiel
            d

      @returns [Form]
        @description
          This Form

    @method addTagInput
      @description
        Adds a hx.TagInput field.

      @arg name [String]
        @description
          The field name.

      @arg? options [Object]
        @description
          The options to use when adding the tag input.

        @property classifier [Function]
          @deprecated 0.13.0
            @description
              Use @code[tagInputOptions] instead.

          @removed 0.14.0
            @description
              Use @code[tagInputOptions] instead.

          @description
            See the hx.TagInput constructor for details.

        @property validator [Function]
          @deprecated 0.13.0
            @description
              Use @code[tagInputOptions] instead.

          @removed 0.14.0
            @description
              Use @code[tagInputOptions] instead.

          @description
            See the hx.TagInput constructor for details.

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property tagInputOptions [Object]
          @added 0.13.0
          @description
            The options to use for the tg input component. See the @hyperlink(../tag-input/)[tag input] constructor for the available options.

        @property disabled [Boolean]
          @added 1.2.0
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property hidden [Boolean]
          @added 1.2.0
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

        @property placeholder [String]
          @added 1.4.0
            @issue 211

          @description
            The placeholder text for the tag input

        @property required [Boolean]
          @added 1.17.0
            @issue 238
            @description
              Added the ability to have 'required' tag inputs where at least
              one value must be entered
          @description
            Whether the tag input must have at least one value entered.

      @returns [Form]
        @description
          This Form

    @method addSelect
      @added 0.10.0
      @updated 0.11.0
        @description
          Updated the form builder to use the new hx.Select element.

      @removed 0.15.0
        @description
          Use addPicker instead. options.selectOptions has also be renamed to options.pickerOptions.

      @description
        Adds a dropdown select input to the form. There is an alternative overload that accepts an array of strings as the values.

        @@codeblock js
          var values = [
            { text: 'Hue', value: 'hue' } ,
            { text: 'Saturation', value: 'saturation'},
            { text: 'Lightness', value: 'lightness'}
          ];
          form.addSelect('Select', values, {required: true})

      @arg name [String]
        @description
          The field name.

      @arg values [Array[Object]]
        @description
          An array of the possible options in the dropdown. The objects should have text and value fields.

      @arg? options [Object]
        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property required [Boolean]
          @description
            Whether or not this is a required field.

            When the value is 'false', the select object will start with a blank value but is not required to be selected.

            When the value is 'true', the select object will start with a blank value and will not validate until a user has selected an option.

            When the value is not defined, the dropdown behaves as normal.

        @property disabled [Boolean]
          @added 0.12.0
          @description
            Whether the field should have the disabled attribute.

        @property selectOptions [Object]
          @added 0.13.0
          @description
            The options to use for the select component. See the @hyperlink(../select/)[select] constructor for the available options.

      @returns [Form]
        @description
          This Form

    @method addDatePicker
      @added 0.11.0
      @description
        Adds a date picker to the form.

      @arg name [String]
        @description
          The field name.

      @arg? options [Object]
        @description
          The options to use when creating the field.

        @property type [String]
          @deprecated 0.13.0
            @description
              Use @code[datePickerOptions] instead.

          @removed 0.14.0
            @description
              Use @code[datePickerOptions] instead.

          @description
            The type of date picker to use, 'calendar' or 'datepicker'. The default is decided by the date picker.

        @property closeOnSelect [Boolean]
          @deprecated 0.13.0
            @description
              Use @code[datePickerOptions] instead.

          @removed 0.14.0
            @description
              Use @code[datePickerOptions] instead.

          @description
            Whether to close the datepicker when a date has been selected.

          @default
            true

        @property selectRange [Boolean]
          @deprecated 0.13.0
            @description
              Use @code[datePickerOptions] instead.

          @removed 0.14.0
            @description
              Use @code[datePickerOptions] instead.

          @description
            Whether to display a date range picker instead of a standard date picker.

          @default
            false

        @property startDate [Date]
          @description
            The selected start date to use when selectRange is true. Both startDate and endDate must be defined for this to have an effect.

          @default
            Today

        @property endDate [Date]
          @description
            The selected end date to use when selectRange is true. Both startDate and endDate must be defined for this to have an effect.

          @default
            Today

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property validStart [Date]
          @added 0.12.0
          @description
            The valid start date for the date picker. The user will not be able to select dates before this date.

        @property validEnd [Date]
          @added 0.12.0
          @description
            The valid end date for the date picker. The user will not be able to select dates after this date.

        @property datePickerOptions [Objec]
          @added 0.13.0
          @description
            The options to use for the date picker component. See the @hyperlink(../date-picker/)[Date Picker] constructor for the available options.

        @property hidden [Boolean]
          @added 1.2.0
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

      @returns [Form]
        @description
          This Form

    @method addTimePicker
      @added 0.11.0
      @description
        Adds a time picker to the form.

      @arg name [String]
        @description
          The field name.

      @arg? options [Object]
        @description
          The options to use when creating the field.

        @property showSeconds [Boolean]
          @deprecated 0.13.0
            @description
              Use @code[timePickerOptions] instead.

          @removed 0.14.0
            @description
              Use @code[timePickerOptions] instead.

          @description
            Whether to show the seconds in the time picker.

          @default
            false

        @property buttonClass [String]
          @deprecated 0.13.0
            @description
              Use @code[timePickerOptions] instead.

          @removed 0.14.0
            @description
              Use @code[timePickerOptions] instead.

          @description
            An additional class to give to the buttons in the time picker (e.g. hx-positive)

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property timePickerOptions [Object]
          @added 0.13.0
          @description
            The options to use for the time picker component. See the @hyperlink(../time-picker/)[Time Picker] constructor for the available options.

        @property hidden [Boolean]
          @added 1.2.0
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

      @returns [Form]
        @description
          This Form

    @method addDateTimePicker
      @added 0.11.0
      @description
        Adds a date time picker to the form.

      @arg name [String]
        @description
          The field name.

      @arg? options [Object]
        @description
          The options to use when creating the field.

        @property showSeconds [Boolean]
          @deprecated 0.13.0
            @description
              Use @code[dateTimePickerOptions] instead.

          @removed 0.14.0
            @description
              Use @code[dateTimePickerOptions] instead.

          @description
            Whether to show the seconds in the time picker.

          @default
            false

        @property closeOnSelect [Boolean]
          @description
            Whether to close the date time picker when a date has been selected.

          @default
            true

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property type [String]
          @added 0.13.0
          @deprecated 0.13.0
            @description
              Use @code[dateTimePickerOptions] instead.

          @removed 0.14.0
            @description
              Use @code[dateTimePickerOptions] instead.

        @property dateTimePickerOptions [Object]
          @added 0.13.0
          @description
            The options to use for the time picker component. See the @hyperlink(../date-time-picker/)[Date Time Picker] constructor for the available options.

        @property hidden [Boolean]
          @added 1.2.0
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

      @returns [Form]
        @description
          This Form

    @method addTextArea
      @added 0.14.0
      @description
        Adds a textarea field to the form.

      @arg name [String]
        @description
          The field name.

      @arg? options [Object]
        @description
          The options to use when creating the textarea field.

        @property required [Boolean]
          @description
            Whether or not this is a required field.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property placeholder [String]
          @description
            The placeholder text to use - this will appear as a greyed out suggestion/hint in the input box.

        @property type [String]
          @description
            The type of text field - the default is 'textarea'.

        @property attrs [Array]
          @description
            Additional attributes to give the textarea input. This should be an array of objects with type and value properties.

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property validator [Function]
          @description
            A function that is called when the 'oninput' function is called. It is passed the event object and should return an error message as a string:
            @@codeblock js
              var validator = function(e){
                if(e.target.value.length < 5){
                  "Please enter text longer than 5 characters"
                }
              }

          @arg event [Event]
            @description
              The input event emitted from the textarea.

          @returns [String]
            @description
              The error string to display if the string did not validate, or undefined if the contents of the input was valid.

        @property hidden [Boolean]
          @added 1.2.0
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

        @property value [Any]
          @added 1.14.0
            @issue 387
            @description
              Added the ability to initialise fields with a value

          @description
            The value to set for this field

      @returns [Form]
        @description
          This Form

    @method addPicker
      @added 0.15.0
      @bugfix 1.14.0
        @issue 304
        @description
          Resolved an issue with validation when un-setting picker values

      @description
        Adds a picker to the form.

      @arg name [String]
        @description
          The field name.

      @arg values [Array[String/Object]]
        @description
          An array of the possible options in the picker. It can be an array of strings or an array of objects, e.g:

          @@codeblock js
            [ "Hue", "Saturation", "Lightness"]

          @@codeblock js
            var values = [
              { text: 'Hue', value: 'hue' } ,
              { text: 'Saturation', value: 'saturation'},
              { text: 'Lightness', value: 'lightness'}
            ];
            form.addSelect('Select', values)

      @arg? options [Object]
        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property required [Boolean]
          @description
            Whether or not this is a required field.

            When the value is 'false', the picker object will start with a blank value but is not required to be selected.

            When the value is 'true', the picker object will start with a blank value and will not validate until a user has selected an option.

            When the value is not defined, the picker behaves as normal.

        @property pickerOptions [Object]
          @description
            The options to use for the picker component. See the @hyperlink(../picker/)[picker] constructor for the available options.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property hidden [Boolean]
          @added 1.2.0
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

      @returns [Form]
        @description
          This Form

    @method addSubmit
      @added 0.15.2
      @removed 1.17.0
      @description
        Adds a submit button to the form

      @arg text [String]
        @description
          The text to give the button

      @arg icon [String]
        @description
          The icon class for the button's icon

      @arg? submitAction [Function]
        @description
          The function to call when the form is submitted instead of calling @code[form.submit()] . Useful for setting custom error messages for properties before submitting the form.

        @arg form [Form]
          @description
            The form being submitted

      @returns [Form]
        @description
          This Form

    @method addSubmit
      @added 1.17.0
        @issue 395
        @description
          Added the @code[options] argument to allow the button to be hidden or
          disabled when it is added to the form

      @description
        Adds a submit button to the form

      @arg text [String]
        @description
          The text to give the button

      @arg icon [String]
        @description
          The icon class for the button's icon

      @arg? submitAction [Function]
        @description
          The function to call when the form is submitted instead of calling @code[form.submit()] . Useful for setting custom error messages for properties before submitting the form.

        @arg form [Form]
          @description
            The form being submitted

      @arg? options [Object]
        @property key [String]
          @description
            The key to use when hiding/showing the submit button

          @default: The @code[text] argument

        @property hidden [Boolean]
          @description
            Whether the submit button should be hidden
          @default: false

        @property disabled [Boolean]
          @description
            Whether the submit button should be disabled
          @default: false

      @returns [Form]
        @description
          This Form

    @method addButton
      @added 1.17.0
        @issue 395
        @description
          Added the ability to add multiple buttons to the bottom of a form

      @description
        Adds a button to the bottom of the form.

        All added buttons will display at the bottom of the form in the order
        they are added.

      @arg text [String]
        @description
          The text to display on the button

      @arg action [Function]
        @description
          The action to perform when the button is clicked

      @arg? options [Object]
        @property icon [String]
          @description
            The icon class for the button's icon

        @property key [String]
          @description
            The property name to map the button to when disabling/enabling the
            button.

          @default: The @code[text] argument

        @property context [String]
          @description
            The context to apply to the button.

          @default: 'action'

        @property buttonType [String]
          @description
            The
            @hyperlink(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type)[type]
            of the button

          @default: 'button'

        @property hidden [Boolean]
          @description
            Whether the button should be hidden
          @default: false

        @property disabled [Boolean]
          @description
            Whether the button should be disabled
          @default: false


      @returns [Form]
        @description
          This Form

    @method addToggle
      @added 1.16.0
        @issue 444
        @description
          New method for adding a Toggle

      @description
        Adds a @code[hx.Toggle] field.

      @arg name
        @description
          The field name

      @arg? options [Object]
        @description
          The options to use when adding the Toggle.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property hidden [Boolean]
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property toggleOptions [Object]
          @description
            The options to use for the Toggle component.

            See the @code[hx.Toggle] prototype constructor for the available options.

    @method addFileInput
      @added 1.3.0
        @issue 25
        @description
          New method for adding a FileInput

      @description
        Adds a @code[hx.FileInput] field.

      @arg name
        @description
          The field name

      @arg? options [Object]
        @description
          The options to use when adding the FileInput.

        @property disabled [Boolean]
          @description
            Whether the property should be disabled as it's initial state. This can also be toggled with the @code[disabled(property, disabled)] method.

          @default
            false

        @property hidden [Boolean]
          @description
            Whether the property should be hidden as it's initial state. This can also be toggled with the @code[hidden(property, hidden)] method.

          @default
            false

        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property fileInputOptions [Object]
          @description
            The options to use for the FileInput component.

            See the @code[hx.FileInput] prototype constructor for the available options.

    @method addAutocompletePicker
      @added 1.4.0
        @issue 17

      @bugfix 1.14.0
        @issue 304
        @description
          Resolved an issue with validation when un-setting picker values

      @description
        Adds an autocomplete picker to the form.

      @arg name [String]
        @description
          The field name.

      @arg values [Array/Function]
        @description
          An array of items or a function that supplies a list of items. See the

          @hyperlink(../autocomplete-picker/)[autocomplete-picker]

           constructor for more information about what the items can be set to.

      @arg? options [Object]
        @property key [String]
          @description
            The property name to map the input value to when filling the form and when getting the data.

        @property required [Boolean]
          @description
            Whether or not this is a required field.

            When the value is 'false', the picker object will start with a blank value but is not required to be selected.

            When the value is 'true', the picker object will start with a blank value and will not validate until a user has selected an option.

            When the value is not defined, the picker behaves as normal.

        @property autocompletePickerOptions [Object]
          @description
            The options to use for the picker component. See the
            @hyperlink(../autocomplete-picker/)[autocomplete-picker]
             constructor for the available options.

        @property disabled [Boolean]
          @description
            Whether the picker should be disabled.

      @returns [Form]
        @description
          This Form

  @method data
    @added 0.11.0
    @bugfix 1.3.0
      @issue 178
      @description
        Fix to make the data method circular for tag input fields

    @description
      Fill the form with some data.

    @arg data [Object]
      @description
        The values to fill the form with. The expected format of the data is a an object where the keys match the labels, and the values are the values to set the input to:
        @@codeblock js
          {
            'Field 1': 25,
            'Field 2': 'green',
            'Field 3': true,
            'Field 4': 'Two'
          }

    @returns [Form]
      @description
        This Form

  @method data
    @added 0.11.0
    @description
      Returns the data in the form as an object containing key/value pairs.

      If no keys are provided in the options, the name of each field will be used as the key.

    @returns [Object]
      @description
        The data currently filled out in the form. It will look something like this:

        @@codeblock js
          {
            'Field 1': 25,
            'Field 2': 'green',
            'Field 3': true,
            'Field 4': 'Two'
          }

  @method component
    @added 0.12.4
      @description
        Added the component method to replace @code[form.properties.get('Name of Property').extras.<componentType>] as the way to get the component for a form element.

        The component types have also been removed from the properties and should be accesed with @code[form.component('Name of Property')] instead.

    @description
      A method for getting the component for a form property. If the property provided doesn't exist or does not have a component, this function will return undefined.

    @arg property [String]
      @description
        The form property to get the component for.

    @returns [Object]
      @description
        The component for a property if one exists.

  @method value
    @added 0.15.2
    @description
      A method for getting the value for a single property in a form.

    @arg property [String]
      @description
        The property/key to use.

    @returns [Any]
      @description
        The property value.

  @method value
    @added 0.15.2
    @description
      A method for setting the value for a single property in a form.

    @arg property [String]
      @description
        The property/key to use.

    @arg value [Any]
      @description
        The value to set.

    @returns [Form]
      @description
        This Form

  @method hidden
    @added 0.15.2
    @description
      A method getting the hidden state for a form property. Hidden properties will be visually hidden and their values will not be present in the form data.

    @arg property [String]
      @description
        The property/key to use.

    @returns [Boolean]
      @description
        Whether the property is hidden.

  @method hidden
    @added 0.15.2
    @description
      A method setting the hidden state for a form property. Hidden properties will be visually hidden and their values will not be present in the form data.

    @arg property [String]
      @description
        The property/key to use.

    @arg hidden [Boolean]
      @description
        Whether the property is hidden.

    @returns [Form]
      @description
        This Form

  @method hidden
    @added 0.15.2
    @description
      A method getting the hidden state for a set of form properties. Hidden properties will be visually hidden and their values will not be present in the form data.

    @arg properties [Array[String]]
      @description
        The array of properties/keys to use.

    @returns [Array[Boolean]]
      @description
        Whether each property is hidden.

  @method hidden
    @added 0.15.2
    @description
      A method setting the hidden state for a set of form properties. Hidden properties will be visually hidden and their values will not be present in the form data.

    @arg properties [Array[String]]
      @description
        The array of properties/keys to use.

    @arg hidden [Boolean]
      @description
        Whether each property is hidden.

    @returns [Form]
      @description
        This Form

  @method node
    @added 0.15.2
    @description
      A method for getting the node for a form property

    @arg property [String]
      @description
        The property/key to use.

    @returns [HTMLElement]
      @description
        The selected node

  @method errorMessage
    @added 0.15.2
    @description
      A method for setting custom error messages for form fields. If the message is set to anything other than an empty string, the form input will be classed as invalid and show a validation message.

      @@codeblock js
        form.errorMessage('Text', 'Please enter something sensible') // Form will not validate with message 'Please enter something sensible'
        form.errorMessage('Text', undefined) // Clears validation message.

    @arg property [String]
      @description
        The property/key to use.

    @arg message [String]
      @description
        The message to set.

    @returns [Form]
      @description
        This Form

  @method errorMessage
    @added 0.15.2
    @description
      A method for getting the error message for a form field. This will include messages set with the @code[errorMessage] method as well as inbuilt errors, such as those shown for required fields.

    @arg property [String]
      @description
        The property/key to use.

    @returns [String]
      @description
        The error message for the property.

  @method disabled
    @added 1.2.0
    @description
      A method for getting the disabled state of a property in a form.

    @arg property [String]
      @description
        The property/key to use.

    @returns [Boolean]
      @description
        The disabled state of the property. If the property does not exist, returns undefined.

  @method disabled
    @added 1.2.0
    @description
      A method for getting the disabled state for an array of properties in a form.

    @arg properties [Array[String]]
      @description
        The array of properties/keys to use.

    @returns [Array[Boolean]]
      @description
        An array indicating the disabled state of each property in the array of properties. If a property does not exist, it's value will be undefined.

  @method disabled
    @added 1.2.0
    @description
      A method for setting the disabled state for a property in a form.

    @arg property [String]
      @description
        The property/key to use.

    @arg disabled [Boolean]
    @returns [Form]
      @description
        The current form

  @method disabled
    @added 1.2.0
    @description
      A method for setting the disabled state for an array of properties in a form.

    @arg properties [Array[String]]
      @description
        The array of properties/keys to use.

    @arg disabled [Boolean]
    @returns [Form]
      @description
        The current form

  @event submit [Object]
    @description
      Emitted when the form is submitted. The form data is included with this event. The data is an object containing the same form data that would be retrieved with form.getData()

