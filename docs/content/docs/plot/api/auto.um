@info 0.15.2
  @list
    @item
      @description
        The undocumented Series.data property has been changed to a public method.

@updated 0.15.2
  @description
    Previously they were rendered in svg, which made them inflexible and limited them to displaying within the plot area. The new version uses floating divs which makes them easer to define and allows them to be displayed outside the plot area.

    This is something that is needed for the new Sparkline api, which is a simple wrapper around the Graph api for drawing tiny graphs. Series now have a labelRenderer method for setting custom labelRenderers. This matches the renderer pattern used throughout hexagon.

@docs 0.15.2
  @description
    Updated the handbook to use the new api.

@bugfix 0.15.3
  @description
    Fix hover labels not appearing in the right position on the page

@updated 1.0.0
  @description
    Removed the deprecated content from all the Plot api's as well as the declarative graphing api (hx.plot), including replacing all of the _new_ prefixed methods/properties with their unprefixed alternatives.

@updated 1.0.0
  @description
    The plot api uses a new sampling method in this version called the 'Largest Three Buckets' algorithm. This should produce graphs that more faithfully represent the original data when downsampling.

@bugfix 1.4.1
  @issue 139
  @description
    Fix the styles for plot labels to prevent them causing a scrollbar

@bugfix 1.8.0
  @issue 290
  @description
    Prevent text wrapping in basic labels (e.g. sparklines)

@object hx.theme.plot
  @property colors [Array[String]]
    @description
      A list of graph colors

  @property warmCol [String]
    @description
      A warm color from the graph palette (red or orange)

  @property ambientCol [String]
    @description
      An ambient color from the graph palette

  @property coldCol [String]
    @description
      A colds color from the graph palette (most likely a shade of blue)

  @property positiveCol [String]
    @description
      A positive color from the graph palette (a shade of green)

  @property warningCol [String]
    @description
      A warning color from the graph palette (a shade of orange / yellow)

  @property negativeCol [String]
    @description
      A negative color from the graph palette (a shade of red)

@prototype hx.Graph
  @updated 0.11.0
    @description
      Added resize listener to make graphs re-render when the container is resized.

  @added 0.11.0
    @description
      Added the ability to set a global zoom for all axes at once with the zoomStart and zoomEnd properties. Zooming with the mouse wheel can be enabled by setting the useZoom property to true.

  @bugfix 0.12.2
    @description
      Automatic scale calculation, stacking and grouping were broken in the 0.12.1 release. These have been fixed.

  @updated 1.4.0
    @issue 211
    @description
      Updated the no data text to be defined in userFacingText

  @description
    Type for drawing graphs.

  @constructor
    @removed 0.15.2
      @description
        A new constructor has been added with an optional options object in place of this. If not using the options object, the existing way of creating a graph with @code[new hx.Graph(selector)] will still work

    @description
      Creates a new graph object.

    @arg selector [HTMLElement/String]
      @description
        An HTMLElement or CSS selector which selects the graph's container.

  @method addAxis
    @description
      Creates a new axis for this graph with linear scales. Multiple axes can be added to a single graph. Returns the new Axis instance.

    @returns [Axis]

  @method addAxis
    @deprecated 0.15.2
      @description
        Use @code[graph.addAxis(options)] instead.

    @removed 1.0.0
      @description
        Use @code[graph.addAxis(options)] instead.

    @description
      Creates a new axis with the scale types specified and adds it to the graph. Returns the new Axis instance.

    @arg xScaleType [String]
      @description
        The scale type to use for the x axis. Can currently be 'linear', 'discrete' or 'date'. When 'linear' and 'date' are used the data should be specified as a number. When 'discrete' is used, the data can be a number or a string. 'date' and 'linear' do the same thing, with the exception that 'date' will choose the tick values on the graph so that they align with common time intervals (1 min, 5 min, 30 min etc). 'date' scales expect the values to be specified in milliseconds.

    @arg yScaleType [String]
      @description
        The scale type to use for the y axis. Can currently be 'linear', 'discrete' or 'date'. When 'linear' and 'date' are used the data should be specified as a number. When 'discrete' is used, the data can be a number or a string. 'date' and 'linear' do the same thing, with the exception that 'date' will choose the tick values on the graph so that they align with common time intervals (1 min, 5 min, 30 min etc). 'date' scales expect the values to be specified in milliseconds.

    @returns [Axis]

  @method addAxis
    @description
      Adds the axis supplied to this graph. An alternative to addAxis(xScaleType, yScaleType). Returns the Axis instance supplied.

    @arg axis [Axis]
      @description
        The axis to add.

    @returns [Axis]

  @method removeAxis
    @description
      Removes an axis from the graph.

    @arg axis [Axis]
      @description
        The axis to remove.

    @returns [Axis]
      @added 0.15.2
      @description
        The removed axis if it was removed, or undefined if it was not removed (because it was not a member of the graph)

  @method render
    @description
      Redraws the graph.

    @returns [Graph]
      @added 0.15.2
      @description
        This Graph

  @extends EventEmitter
  @property useZoom [Boolean]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use graph.zoomEnabled() instead. zoomEnabled(value) to set, zoomEnabled() to get.

    @removed 1.0.0
      @description
        Use graph.zoomEnabled() instead. zoomEnabled(value) to set, zoomEnabled() to get.

    @description
      Whether or not to enable zoom controls for the graph

    @default
      false

  @property zoomStart [Number]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use graph.zoomRangeStart() instead. zoomRangeStart(value) to set, zoomRangeStart() to get.

    @removed 1.0.0
      @description
        Use graph.zoomRangeStart() instead. zoomRangeStart(value) to set, zoomRangeStart() to get.

    @description
      The start or the zoomed region - specified on the 0 to 1 scale.

    @default
      0

  @property zoomEnd [Number]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use graph.zoomRangeEnd() instead. zoomRangeEnd(value) to set, zoomRangeEnd() to get.

    @removed 1.0.0
      @description
        Use graph.zoomRangeEnd() instead. zoomRangeEnd(value) to set, zoomRangeEnd() to get.

    @description
      The end or the zoomed region - specified on the 0 to 1 scale.

    @default
      1

  @property useLabels [Boolean]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use graph.labelsEnabled() instead. labelsEnabled(value) to set, labelsEnabled() to get.

    @removed 1.0.0
      @description
        Use graph.labelsEnabled() instead. labelsEnabled(value) to set, labelsEnabled() to get.

    @description
      Whether or not to display labels on hover

    @default
      true

  @property useLegend [Boolean]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use graph.legendEnabled() instead. legendEnabled(value) to set, legendEnabled() to get.

    @removed 1.0.0
      @description
        Use graph.legendEnabled() instead. legendEnabled(value) to set, legendEnabled() to get.

    @description
      Whether or not to display the legend

    @default
      false

  @property legendPosition [String]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use graph.legendLocation() instead. legendLocation(value) to set, legendLocation() to get.

    @removed 1.0.0
      @description
        Use graph.legendLocation() instead. legendLocation(value) to set, legendLocation() to get.

    @description
      How to display the legend on the graph. Possible modes:

      @list
        @item['auto' - moves the legend around to avoid the mouse]
        @item['hover' - same as auto, but only displays the legend on mouse hover]
        @item['top-right' - displays the legend in the top right]
        @item['top-left' - displays the legend in the top left]
        @item['bottom-right' - displays the legend in the bottom right]
        @item['bottom-left' - displays the legend in the bottom left]

    @default
      auto

  @constructor
    @added 0.15.2
    @arg selector [HTMLElement/String]
      @description
        An HTMLElement or CSS selector which selects the graph's container.

    @arg? options [Object]

      @property zoomRangeStart [Number]
        @description
          Sets the start of the zoomed region - specified on the 0 to 1 scale where 0 is the left-most value on the x axis, and 1 means the right-most value of the x axis (setting it to 1 will always result in the graph showing nothing).

        @default
          0

      @property zoomRangeEnd [Number]
        @description
          Sets the end of the zoomed region - specified on the 0 to 1 scale where 0 is the left-most value on the x axis, and 1 means the right-most value of the x axis (setting it to 1 will always result in the graph showing nothing).

        @default
          1

      @property zoomEnabled [Boolean]
        @description
          Enables or disables the zoom with mouse feature. Supplying true enables zoom, false disables it.

        @default
          false

      @property labelsEnabled [Boolean]
        @description
          Enables or disables labels. Supplying true enables zoom, false disables it.

        @default
          true

      @property legendEnabled [Boolean]
        @description
          Enables or disables the legends. Supplying true enables zoom, false disables it.

        @default
          true

      @property legendLocation [String]
        @description
          How to display the legend on the graph. Possible modes:

          @list
            @item['auto' - moves the legend around to avoid the mouse]
            @item['hover' - same as auto, but only displays the legend on mouse hover]
            @item['top-right' - displays the legend in the top right]
            @item['top-left' - displays the legend in the top left]
            @item['bottom-right' - displays the legend in the bottom right]
            @item['bottom-left' - displays the legend in the bottom left]

        @default
          "auto"

      @property axes [Array[Object]]
        @added 1.1.0
          @description
            Added an axes option to hx.Graph to allow graphs to be created with the fluid api.

        @description
          An array of axes objects. Each item in the array is equivalent to an axis created using

          @code um

          ][hx.Axis]

          See the

          @code um

          ][hx.Axis] prototype constructor for details on the available axis options

          @@codeblock js
            {
              x: {...},
              y: {...},
              series: [
                {
                  type: 'line',   // The series type
                  options: {...}  // The series options
                }
              ]
            }

      @property redrawOnResize [Boolean]
        @added 1.5.0
          @issue 152
          @description
            Added an option to disable automatic redraw when container is resized.

        @description
          Whether or not the graph should automatically be redrawn when the container is resized. By default true.

  @method zoomRangeStart
    @added 0.15.2
    @description
      Sets the start of the zoomed region - specified on the 0 to 1 scale where 0 is the left-most value on the x axis, and 1 means the right-most value of the x axis (setting it to 1 will always result in the graph showing nothing).

    @arg value [Number]
      @description
        A value between 0 and 1

    @returns [Graph]
      @description
        This Graph

  @method zoomRangeStart
    @added 0.15.2
    @description
      Gets the start of the zoomed region - specified on the 0 to 1 scale where 0 is the left-most value on the x axis, and 1 means the right-most value of the x axis (setting it to 1 will always result in the graph showing nothing).

    @returns [Number]

  @method zoomRangeEnd
    @added 0.15.2
    @description
      Sets the end of the zoomed region - specified on the 0 to 1 scale where 0 is the left-most value on the x axis, and 1 means the right-most value of the x axis (setting it to 1 will always result in the graph showing nothing).

    @arg value [Number]
      @description
        A value between 0 and 1

    @returns [Graph]
      @description
        This Graph

  @method zoomRangeEnd
    @added 0.15.2
    @description
      Gets the end of the zoomed region - specified on the 0 to 1 scale where 0 is the left-most value on the x axis, and 1 means the right-most value of the x axis (setting it to 1 will always result in the graph showing nothing).

    @returns [Number]

  @method zoomEnabled
    @added 0.15.2
    @description
      Enables or disables the zoom with mouse feature. Supplying true enables zoom, false disables it.

    @arg value [Boolean]
      @description
        Wheter or not zoom should be enabled; true for enabled, false for disabled.

    @returns [Graph]
      @description
        This Graph

  @method zoomEnabled
    @added 0.15.2
    @description
      Gets the value of the zoomEnabled option.

    @returns [Boolean]
      @description
        True if zoom is enabled, false if it is disabled.

  @method labelsEnabled
    @added 0.15.2
    @arg value [Boolean]
      @description
        Wheter or not labels should be enabled; true for enabled, false for disabled.

    @returns [Graph]
      @description
        This Graph

  @method labelsEnabled
    @added 0.15.2
    @description
      Gets the value of the labelsEnabled option.

    @returns [Boolean]
      @description
        True if labels are enabled, false if disabled.

  @method legendEnabled
    @added 0.15.2
    @arg value [Boolean]
      @description
        Wheter or the legend should be enabled; true for enabled, false for disabled.

    @returns [Graph]
      @description
        This Graph

  @method legendEnabled
    @added 0.15.2
    @description
      Gets the value of the legendEnabled option.

    @returns [Boolean]
      @description
        True if legends are enabled, false if they are disabled.

  @method legendLocation
    @added 0.15.2
    @description
      How to display the legend on the graph. Possible modes:

      @list
        @item['auto' - moves the legend around to avoid the mouse]
        @item['hover' - same as auto, but only displays the legend on mouse hover]
        @item['top-right' - displays the legend in the top right]
        @item['top-left' - displays the legend in the top left]
        @item['bottom-right' - displays the legend in the bottom right]
        @item['bottom-left' - displays the legend in the bottom left]

    @arg value [String]
      @description
        One of the position modes from the list above.

    @returns [Graph]
      @description
        This Graph

  @method legendLocation
    @added 0.15.2
    @description
      Gets the value of the legendLocation option. It should be one of the following:

      @list
        @item['auto' - moves the legend around to avoid the mouse]
        @item['hover' - same as auto, but only displays the legend on mouse hover]
        @item['top-right' - displays the legend in the top right]
        @item['top-left' - displays the legend in the top left]
        @item['bottom-right' - displays the legend in the bottom right]
        @item['bottom-left' - displays the legend in the bottom left]

    @returns [String]
      @description
        The location

  @method axes
    @added 0.15.2
    @description
      Gets the axes attached to the graph.

    @returns [Array[Axis]]
      @description
        The list of Axis instances attached to the graph.

  @method axes
    @added 0.15.2
    @description
      Sets the axes attached to the graph.

    @arg axes [Array[Axis]]
      @description
        The list of Axis instances the graph should have.

    @returns [Graph]
      @description
        This Graph

  @method addAxis
    @added 0.15.2
    @description
      Creates a new axis with the options specified and adds it to the graph. Returns the new Axis instance.

    @arg? options [AxisOptions]
    @returns [Axis]

  @method redrawOnResize
    @added 1.5.0
      @issue 152
      @description
        Added an option to disable automatic redraw when container is resized.

    @description
      Gets the currently set option for whether the graph should redraw on resizing the container

    @returns [Boolean]
      @description
        The currently set value for redrawOnResize

  @method redrawOnResize
    @added 1.5.0
      @issue 152
      @description
        Added an option to disable automatic redraw when container is resized.

    @description
      Sets the option for whether the graph should redraw on resizing the container

    @arg value [Boolean]
      @description
        Whether the graph should redraw on resizing the container

    @returns [Graph]
      @description
        This Graph

  @event click [Object]
    @description
      The event emitted when a series is clicked.

    @property event
      @description
        The click event data.

    @property data
      @description
        The data of the point or element that was clicked.

    @property series
      @description
        The selected series.

  @event zoom
    @added 0.12.0
      @description
        Added a zoom event when the zoom is changed by the user

    @description
      The event emitted when a series is clicked.

    @data Object
      @property start [Number]
        @description
          The start of the zoom range on the scale 0-1.

      @property end [Number]
        @description
          The start of the zoom range on the scale 0-1.

  @event render
    @added 1.1.0
      @description
        Added an event to allow listening to when a graph is rendered.

    @description
      The event emitted when a graph is rendered.

@prototype hx.Axis
  @bugfix 0.15.2
    @description
      Fixed an issue with how the axes were being positioned for xAxisTickLabelPosition/yAxisTickLabelPosition

  @description
    Typically this object will be created via graph.addAxis() or graph.addAxis(xScaleType, yScaleType).

  @constructor
    @deprecated 0.15.2
      @description
        Use @code[hx.Axis(options)] instead.

    @removed 1.0.0
      @description
        Use @code[hx.Axis(options)] instead.

    @description
      Creates a new Axis instance. Prefer using graph.addAxis(xScaleType, yScaleType) over using this directly.

    @arg? xScaleType [String]
      @description
        The scale type to use for the x axis. Can currently be 'linear', 'discrete' or 'date'. When 'linear' and 'date' are used the data should be specified as a number. When 'discrete' is used, the data can be a number or a string. 'date' and 'linear' do the same thing, with the exception that 'date' will choose the tick values on the graph so that they align with common time intervals (1 min, 5 min, 30 min etc). 'date' scales expect the values to be specified in milliseconds.

      @default
        'linear'

    @arg? yScaleType [String]
      @description
        The scale type to use for the x axis. Can currently be 'linear', 'discrete' or 'date'. When 'linear' and 'date' are used the data should be specified as a number. When 'discrete' is used, the data can be a number or a string. 'date' and 'linear' do the same thing, with the exception that 'date' will choose the tick values on the graph so that they align with common time intervals (1 min, 5 min, 30 min etc). 'date' scales expect the values to be specified in milliseconds.

      @default
        'linear'

  @property xVisible [Boolean]
    @deprecated 0.15.2
      @description
        Use @code[Axis.x.visible()] instead. @code[Axis.x.visible()] to get, @code[Axis.x.visible(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.visible()] instead. @code[Axis.x.visible()] to get, @code[Axis.x.visible(value)] to set.

    @description
      Whether or not the x axis should be visible. The default is true.

  @property xFormatter [Function]
    @deprecated 0.15.2
      @description
        Use @code[Axis.x.formatter()] instead. @code[Axis.x.formatter()] to get, @code[Axis.x.formatter(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.formatter()] instead. @code[Axis.x.formatter()] to get, @code[Axis.x.formatter(value)] to set.

    @description
      A function that formats the strings that are displayed at the ticks of the x axis. It is a function with first argument that will typically be a number (although it depends on the type of the x values of your data), and should return a string. The default is hx.format.si(2), which uses SI notation for numbers, and passes strings through untouched.

    @arg input [Any]
    @returns [String]
      @description
        The formatted string

  @property xMin [Number]
    @deprecated 0.15.2
      @description
        Use @code[Axis.x.min()] instead. @code[Axis.x.min()] to get, @code[Axis.x.min(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.min()] instead. @code[Axis.x.min()] to get, @code[Axis.x.min(value)] to set.

    @description
      The minimum value the x axis should show. If set to 'auto' the minimum value will calculated from the data in the series. The default is 'auto'.

  @property xMax [Number]
    @deprecated 0.15.2
      @description
        Use @code[Axis.x.max()] instead. @code[Axis.x.max()] to get, @code[Axis.x.max(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.max()] instead. @code[Axis.x.max()] to get, @code[Axis.x.max(value)] to set.

    @description
      The maximum value the x axis should show. If set to 'auto' the maximum value will calculated from the data in the series. The default is 'auto'.

  @property xDiscretePadding [Number]
    @deprecated 0.15.2
      @description
        Use @code[Axis.x.discretePadding()] instead. @code[Axis.x.discretePadding()] to get, @code[Axis.x.discretePadding(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.discretePadding()] instead. @code[Axis.x.discretePadding()] to get, @code[Axis.x.discretePadding(value)] to set.

    @description
      The padding between discrete values on the x axis. Should be a value between 0 and 1. This will affect anything that uses the band width of a tick (ie bar series). The default is 0.1, which results in reserving 10% of the band width for padding, resulting in separation of groups of bar series.

  @property xDiscreteLabels [Array[Any]]
    @deprecated 0.15.2
      @description
        Use @code[Axis.x.discreteLabels()] instead. @code[Axis.x.discreteLabels()] to get, @code[Axis.x.discreteLabels(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.discreteLabels()] instead. @code[Axis.x.discreteLabels()] to get, @code[Axis.x.discreteLabels(value)] to set.

    @description
      The set of labels to use for a discrete x axis. This is similar to setting the xMin and xMax in linear scale case. The default is 'auto', which will mean that the axis works out it's labels from the series data.

  @property xTickSpacing [Number]
    @deprecated 0.15.2
      @description
        Use @code[Axis.x.tickSpacing()] instead. @code[Axis.x.tickSpacing()] to get, @code[Axis.x.tickSpacing(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.tickSpacing()] instead. @code[Axis.x.tickSpacing()] to get, @code[Axis.x.tickSpacing(value)] to set.

    @description
      The preferred spacing (in pixels) between ticks on the x axis. The axis will do it's best to keep close to this value, but may use other spacing to ensure that other conditions can be met such as the xMin, xMax and having 'nice' vales at the ticks. The default is 50.

  @property xTitle [String]
    @deprecated 0.15.2
      @description
        Use @code[Axis.x.title()] instead. @code[Axis.x.title()] to get, @code[Axis.x.title(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.title()] instead. @code[Axis.x.title()] to get, @code[Axis.x.title(value)] to set.

    @description
      The title to give the x axis.

  @property xScalePaddingMin [Number]
    @deprecated 0.15.2
      @description
        Use @code[Axis.x.scalePaddingMin()] instead. @code[Axis.x.scalePaddingMin()] to get, @code[Axis.x.scalePaddingMin(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.scalePaddingMin()] instead. @code[Axis.x.scalePaddingMin()] to get, @code[Axis.x.scalePaddingMin(value)] to set.

    @description
      Padding to apply to the start of the x axis domain. This makes it possible to stop the series from touching the axes, if that is wanted. This value is a proportion of the data range, so 0.1 will add an extra 10% to the start of the x domain. The default value is 0, which applies no padding. It typically makes more sense to apply this to the y axis than the x axis.

  @property xScalePaddingMax [Number]
    @deprecated 0.15.2
      @description
        Use @code[Axis.x.scalePaddingMax()] instead. @code[Axis.x.scalePaddingMax()] to get, @code[Axis.x.scalePaddingMax(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.scalePaddingMax()] instead. @code[Axis.x.scalePaddingMax()] to get, @code[Axis.x.scalePaddingMax(value)] to set.

    @description
      Padding to apply to the end of the x axis domain. This makes it possible to stop the series from touching the axes, if that is wanted. This value is a proportion of the data range, so 0.1 will add an extra 10% to the end of the x domain. The default value is 0, which applies no padding. It typically makes more sense to apply this to the y axis than the x axis.

  @property xGridLines [Boolean]
    @added 0.9.0
    @deprecated 0.15.2
      @description
        Use @code[Axis.x.gridLines()] instead. @code[Axis.x.gridLines()] to get, @code[Axis.x.gridLines(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.gridLines()] instead. @code[Axis.x.gridLines()] to get, @code[Axis.x.gridLines(value)] to set.

    @description
      Whether or not to show grid lines for the x axis ticks. True means the grid lines will be shown.

    @default
      true

  @property xNthTickVisible [Number]
    @added 0.9.0
    @deprecated 0.15.2
      @description
        Use @code[Axis.x.nthTickVisible()] instead. @code[Axis.x.nthTickVisible()] to get, @code[Axis.x.nthTickVisible(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.nthTickVisible()] instead. @code[Axis.x.nthTickVisible()] to get, @code[Axis.x.nthTickVisible(value)] to set.

    @description
      Sets which ticks should display text. If set to 1, then every tick will have text. If set to 2 every other tick will display text. If set to 3, every third tick will show text. And so on..

    @default
      1

  @property yVisible [Boolean]
    @deprecated 0.15.2
      @description
        Use @code[Axis.y.visible()] instead. @code[Axis.y.visible()] to get, @code[Axis.y.visible(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.visible()] instead. @code[Axis.y.visible()] to get, @code[Axis.y.visible(value)] to set.

    @description
      Whether or not the y axis should be visible. The default is true.

  @property yFormatter [Function]
    @deprecated 0.15.2
      @description
        Use @code[Axis.y.formatter()] instead. @code[Axis.y.formatter()] to get, @code[Axis.y.formatter(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.formatter()] instead. @code[Axis.y.formatter()] to get, @code[Axis.y.formatter(value)] to set.

    @description
      A function that formats the strings that are displayed at the ticks of the y axis. It is a function with first argument that will typically be a number (although it depends on the type of the y values of your data), and should return a string. The default is hx.format.si(2), which uses SI notation for numbers, and passes strings through untouched.

    @arg input [Any]
    @returns [String]
      @description
        The formatted string

  @property yMin [Number]
    @deprecated 0.15.2
      @description
        Use @code[Axis.y.min()] instead. @code[Axis.y.min()] to get, @code[Axis.y.min(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.min()] instead. @code[Axis.y.min()] to get, @code[Axis.y.min(value)] to set.

    @description
      The minimum value the y axis should show. If set to 'auto' the minimum value will calculated from the data in the series. The default is 'auto'.

  @property yMax [Number]
    @deprecated 0.15.2
      @description
        Use @code[Axis.y.max()] instead. @code[Axis.y.max()] to get, @code[Axis.y.max(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.max()] instead. @code[Axis.y.max()] to get, @code[Axis.y.max(value)] to set.

    @description
      The maximum value the y axis should show. If set to 'auto' the maximum value will calculated from the data in the series. The default is 'auto'.

  @property yDiscretePadding [Number]
    @deprecated 0.15.2
      @description
        Use @code[Axis.y.discretePadding()] instead. @code[Axis.y.discretePadding()] to get, @code[Axis.y.discretePadding(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.discretePadding()] instead. @code[Axis.y.discretePadding()] to get, @code[Axis.y.discretePadding(value)] to set.

    @description
      The padding between discrete values on the y axis. Should be a value between 0 and 1. This will affect anything that uses the band width of a tick (ie bar series). The default is 0.1, which results in reserving 10% of the band width for padding, resulting in separation of groups of bar series.

  @property yDiscreteLabels [Array[Any]]
    @deprecated 0.15.2
      @description
        Use @code[Axis.y.discreteLabels()] instead. @code[Axis.y.discreteLabels()] to get, @code[Axis.y.discreteLabels(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.discreteLabels()] instead. @code[Axis.y.discreteLabels()] to get, @code[Axis.y.discreteLabels(value)] to set.

    @description
      The set of labels to use for a discrete y axis. This is similar to setting the yMin and yMax in linear scale case. The default is 'auto', which will mean that the axis works out it's labels from the series data.

  @property yTickSpacing [Number]
    @deprecated 0.15.2
      @description
        Use @code[Axis.y.tickSpacing()] instead. @code[Axis.y.tickSpacing()] to get, @code[Axis.y.tickSpacing(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.tickSpacing()] instead. @code[Axis.y.tickSpacing()] to get, @code[Axis.y.tickSpacing(value)] to set.

    @description
      The preferred spacing (in pixels) between ticks on the y axis. The axis will do it's best to keep close to this value, but may use other spacing to ensure that other conditions can be met such as the yMin, yMax and having 'nice' vales at the ticks. The default is 50.

  @property yTitle [String]
    @deprecated 0.15.2
      @description
        Use @code[Axis.y.title()] instead. @code[Axis.y.title()] to get, @code[Axis.y.title(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.title()] instead. @code[Axis.y.title()] to get, @code[Axis.y.title(value)] to set.

    @description
      The title to give the y axis.

  @property yScalePaddingMin [Number]
    @deprecated 0.15.2
      @description
        Use @code[Axis.y.scalePaddingMin()] instead. @code[Axis.y.scalePaddingMin()] to get, @code[Axis.y.scalePaddingMin(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.scalePaddingMin()] instead. @code[Axis.y.scalePaddingMin()] to get, @code[Axis.y.scalePaddingMin(value)] to set.

    @description
      Padding to apply to the start of the y axis domain. This makes it possible to stop the series from touching the axes, if that is wanted. This value is a proportion of the data range, so 0.1 will add an extra 10% to the start of the y domain. The default value is 0, which applies no padding.

  @property yScalePaddingMax [Number]
    @deprecated 0.15.2
      @description
        Use @code[Axis.y.scalePaddingMax()] instead. @code[Axis.y.scalePaddingMax()] to get, @code[Axis.y.scalePaddingMax(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.scalePaddingMax()] instead. @code[Axis.y.scalePaddingMax()] to get, @code[Axis.y.scalePaddingMax(value)] to set.

    @description
      Padding to apply to the end of the y axis domain. This makes it possible to stop the series from touching the axes, if that is wanted. This value is a proportion of the data range, so 0.1 will add an extra 10% to the end of the y domain. The default value is 0, which applies no padding.

  @property yGridLines [Boolean]
    @added 0.9.0
    @deprecated 0.15.2
      @description
        Use @code[Axis.y.gridLines()] instead. @code[Axis.y.gridLines()] to get, @code[Axis.y.gridLines(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.gridLines()] instead. @code[Axis.y.gridLines()] to get, @code[Axis.y.gridLines(value)] to set.

    @description
      Whether or not to show grid lines for the y axis ticks. True means the grid lines will be shown.

    @default
      true

  @property yNthTickVisible [Number]
    @added 0.9.0
    @deprecated 0.15.2
      @description
        Use @code[Axis.y.nthTickVisible()] instead. @code[Axis.y.nthTickVisible()] to get, @code[Axis.y.nthTickVisible(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.nthTickVisible()] instead. @code[Axis.y.nthTickVisible()] to get, @code[Axis.y.nthTickVisible(value)] to set.

    @description
      Sets which ticks should display text. If set to 1, then every tick will have text. If set to 2 every other tick will display text. If set to 3, every third tick will show text. And so on..

    @default
      1

  @method addSeries
    @deprecated 0.15.2
      @description
        Use @code[addSeries(type, {title: "name"})] instead.

    @removed 1.0.0
      @description
        Use @code[addSeries(type, {title: "name"})] instead.

    @description
      Creates a new Series with the given type, and adds it to the axis. The new Series instance is returned.

    @arg type [String]
      @description
        The type of series to add. Can be one of 'line', 'bar', 'band', 'scatter' and 'straight-line'

    @arg? name [String]
      @description
        The name to give the series. This will be displayed on the graph, and so should be nicely formatted if possible.

    @returns [Series]

  @method addSeries
    @description
      Adds a Series instance to the axis.

    @arg series [Series]
      @description
        The Series instance to add. Prefer the addSeries(type, name) method if possible.

    @returns [Series]

  @method removeSeries
    @description
      Removes a Series from this axis.

    @arg series [Series]
      @description
        The Series to remove.

    @returns [Series]
      @added 0.15.2
      @description
        The Series removed, or undefined if it was not removed.

  @property xAxisTickLabelPosition [String]
    @added 0.12.8
      @description
        An option for choosing where the x axis tick labels should be positioned

    @deprecated 0.15.2
      @description
        Use @code[Axis.x.axisTickLabelPosition()] instead. @code[Axis.x.axisTickLabelPosition()] to get, @code[Axis.x.axisTickLabelPosition(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.axisTickLabelPosition()] instead. @code[Axis.x.axisTickLabelPosition()] to get, @code[Axis.x.axisTickLabelPosition(value)] to set.

    @description
      Allows positioning of the tick labels. The options are 'axis' or 'bottom'. 'axis' will cause the labels to stick to the axis (at y=0), 'bottom' will cause the labels to stay at the bottom of the graph area.

    @default
      'bottom'

  @property yAxisTickLabelPosition [String]
    @added 0.12.8
      @description
        An option for choosing where the y axis tick labels should be positioned

    @deprecated 0.15.2
      @description
        Use @code[Axis.y.axisTickLabelPosition()] instead. @code[Axis.y.axisTickLabelPosition()] to get, @code[Axis.y.axisTickLabelPosition(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.axisTickLabelPosition()] instead. @code[Axis.y.axisTickLabelPosition()] to get, @code[Axis.y.axisTickLabelPosition(value)] to set.

    @description
      Allows positioning of the tick labels. The options are 'axis' or 'left'. 'axis' will cause the labels to stick to the axis (at x=0), 'left' will cause the labels to stay at the bottom of the graph area.

    @default
      'left'

  @property xShowTicks [Boolean]
    @added 0.12.10
      @description
        An option to show/hide x tick markers

    @deprecated 0.15.2
      @description
        Use @code[Axis.x.showTicks()] instead. @code[Axis.x.showTicks()] to get, @code[Axis.x.showTicks(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.x.showTicks()] instead. @code[Axis.x.showTicks()] to get, @code[Axis.x.showTicks(value)] to set.

    @description
      If true, the x axis ticks (text and tick marker) will be visible, if false they will be hidden

    @default
      true

  @property yShowTicks [String]
    @added 0.12.10
      @description
        An option to show/hide y tick markers

    @deprecated 0.15.2
      @description
        Use @code[Axis.y.showTicks()] instead. @code[Axis.y.showTicks()] to get, @code[Axis.y.showTicks(value)] to set.

    @removed 1.0.0
      @description
        Use @code[Axis.y.showTicks()] instead. @code[Axis.y.showTicks()] to get, @code[Axis.y.showTicks(value)] to set.

    @description
      If true, the y axis ticks (text and tick marker) will be visible, if false they will be hidden

    @default
      true

  @constructor
    @added 0.15.2
    @description
      Creates a new Axis instance. This should normally be done via graph.addAxis(options) instead.

    @arg? options [Object]
      @property x [Object]
        @property scaleType [String]
          @description
            The scale type to use. Should be one of 'linear', 'discrete' or 'time'. 'discrete' should be used for bar charts, and 'linear' and 'time' for line graphs (in general). The 'time' scale type is similar to linear, but picks the ticks so that they align on sensible times.

          @default
            'linear'

        @property visible [Boolean]
          @description
            Sets the visibility state

            Whether or not the x axis should be visible. The default is true.

          @default
            true

        @property formatter [Function]
          @description
            The formatter is function that formats the strings that are displayed at the ticks of the axis. It is a function with first argument that will typically be a number (although it depends on the type of the values in your data), and should return a string. The default is hx.format.si(2), which uses SI notation for numbers, and passes strings through untouched.

          @arg value [Number]
          @returns [String]
            @description
              The number formatted as a string.

          @default
            hx.format.si

        @property tickRotation [Number]
          @description
            Sets the rotation of the ticks in degrees.

          @default
            0

        @property min [Number/String]
          @description
            Sets the minimum value the axis should show. If set to 'auto' the minimum value will calculated from the data in the series.

          @default
            'auto'

        @property max [Number/String]
          @description
            Sets the maximum value the axis should show. If set to 'auto' the maximum value will calculated from the data in the series.

          @default
            'auto'

        @property discretePadding [Number]
          @description
            Sets the discretePadding property

            The padding between discrete values on the x axis. Should be a value between 0 and 1. This will affect anything that uses the band width of a tick (ie bar series). The default is 0.1, which results in reserving 10% of the band width for padding, resulting in separation of groups of bar series.

          @default
            0,1

        @property discreteLabels [Array[String]]
          @description
            Sets the discreteLabels property

            The set of labels to use for a discrete x axis. This is similar to setting the min and max in linear scale case. The default is 'auto', which will mean that the axis works out it's labels from the series data.

          @default
            'auto'

        @property tickSpacing [Number]
          @description
            Sets the preferred spacing (in pixels) between ticks on the axis. The axis will do it's best to keep close to this value, but may use other spacing to ensure that other conditions can be met such as the min, max and having 'nice' vales at the ticks.

          @default
            50

        @property title [String]
          @description
            Sets the title of the axis

          @default
            ''

        @property scalePaddingMin [Number]
          @description
            Sets the scalePaddingMin property

          @default
            0

        @property scalePaddingMax [Number]
          @description
            Sets the padding to apply to the end of the axis domain. This option makes it possible to stop the series from touching the axes, if that is wanted. This value is a proportion of the data range, so 0.1 will add an extra 10% to the end of the domain. The default value is 0, which applies no padding.

          @default
            0

        @property ticksAll [Boolean]
          @description
            Sets whether ticks should be shown for every data point.

          @default
            false

        @property gridLines [Boolean]
          @description
            Sets whether or not grid lines should be used for the axis ticks. True means the grid lines will be shown.

          @default
            true

        @property nthTickVisible [Number]
          @description
            Sets which ticks should display text. If set to 1, then every tick will have text. If set to 2 every other tick will display text. If set to 3, every third tick will show text. And so on..

          @default
            1

        @property axisTickLabelPosition [Boolean]
          @description
            Sets the axisTickLabelPosi property

            Allows positioning of the tick labels. The options are 'axis' or 'bottom'. 'axis' will cause the labels to stick to the axis, 'bottom' will cause the labels to stay at the bottom of the graph area.

          @default
            'bottom'

        @property showTicks [Boolean]
          @description
            Sets the showTicks property. If true, the axis ticks (text and tick marker) will be visible, if false they will be hidden.

          @default
            true

        @property doCollisionDetection [Boolean]
          @added 1.10.0
            @issue 353
            @description
              Added an option to enable collision detection to prevent labels overlapping on graphs. By default, this value is true.

          @description
            An option for enabling collision detection on labels.

            When this is enabled, labels will be prevented from overlapping by dynamically changing the @code[nthTickVisible] property.

          @default
            true

        @define doCollisionDetectionMethod
          @method doCollisionDetection
            @added 1.10.0
              @issue 353
              @description
                Added an option to enable collision detection to prevent labels overlapping on graphs. By default, this value is true.

            @description
              Gets the doCollisionDetection property

              Used for enabling collision detecion for labels to prevent them from overlapping

            @returns [Boolean]
              @description
                The doCollisionDetection value.

          @method doCollisionDetection
            @added 1.10.0
              @issue 353
              @description
                Added an option to enable collision detection to prevent labels overlapping on graphs. By default, this value is true.

            @description
              Sets the doCollisionDetection property

              Used for enabling collision detecion for labels to prevent them from overlapping

            @arg value [Boolean]
            @returns [Axis]
              @description
                This Axis

      @property y [Object]
        @property scaleType [String]
          @description
            The scale type to use. Should be one of 'linear', 'discrete' or 'time'. 'discrete' should be used for bar charts, and 'linear' and 'time' for line graphs (in general). The 'time' scale type is similar to linear, but picks the ticks so that they align on sensible times.

          @default
            'linear'

        @property visible [Boolean]
          @description
            Sets the visibility state

            Whether or not the x axis should be visible. The default is true.

          @default
            true

        @property formatter [Function]
          @description
            The formatter is function that formats the strings that are displayed at the ticks of the axis. It is a function with first argument that will typically be a number (although it depends on the type of the values in your data), and should return a string. The default is hx.format.si(2), which uses SI notation for numbers, and passes strings through untouched.

          @arg value [Number]
          @returns [String]
            @description
              The number formatted as a string.

          @default
            hx.format.si

        @property tickRotation [Number]
          @description
            Sets the rotation of the ticks in degrees.

          @default
            0

        @property min [Number/String]
          @description
            Sets the minimum value the axis should show. If set to 'auto' the minimum value will calculated from the data in the series.

          @default
            'auto'

        @property max [Number/String]
          @description
            Sets the maximum value the axis should show. If set to 'auto' the maximum value will calculated from the data in the series.

          @default
            'auto'

        @property discretePadding [Number]
          @description
            Sets the discretePadding property

            The padding between discrete values on the x axis. Should be a value between 0 and 1. This will affect anything that uses the band width of a tick (ie bar series). The default is 0.1, which results in reserving 10% of the band width for padding, resulting in separation of groups of bar series.

          @default
            0,1

        @property discreteLabels [Array[String]]
          @description
            Sets the discreteLabels property

            The set of labels to use for a discrete x axis. This is similar to setting the min and max in linear scale case. The default is 'auto', which will mean that the axis works out it's labels from the series data.

          @default
            'auto'

        @property tickSpacing [Number]
          @description
            Sets the preferred spacing (in pixels) between ticks on the axis. The axis will do it's best to keep close to this value, but may use other spacing to ensure that other conditions can be met such as the min, max and having 'nice' vales at the ticks.

          @default
            50

        @property title [String]
          @description
            Sets the title of the axis

          @default
            ''

        @property scalePaddingMin [Number]
          @description
            Sets the scalePaddingMin property

          @default
            0

        @property scalePaddingMax [Number]
          @description
            Sets the padding to apply to the end of the axis domain. This option makes it possible to stop the series from touching the axes, if that is wanted. This value is a proportion of the data range, so 0.1 will add an extra 10% to the end of the domain. The default value is 0, which applies no padding.

          @default
            0

        @property ticksAll [Boolean]
          @description
            Sets whether ticks should be shown for every data point.

          @default
            false

        @property gridLines [Boolean]
          @description
            Sets whether or not grid lines should be used for the axis ticks. True means the grid lines will be shown.

          @default
            true

        @property nthTickVisible [Number]
          @description
            Sets which ticks should display text. If set to 1, then every tick will have text. If set to 2 every other tick will display text. If set to 3, every third tick will show text. And so on..

          @default
            1

        @property axisTickLabelPosition [Boolean]
          @description
            Sets the axisTickLabelPosi property

            Allows positioning of the tick labels. The options are 'axis' or 'bottom'. 'axis' will cause the labels to stick to the axis, 'bottom' will cause the labels to stay at the bottom of the graph area.

          @default
            'left'

        @property showTicks [Boolean]
          @description
            Sets the showTicks property. If true, the axis ticks (text and tick marker) will be visible, if false they will be hidden.

          @default
            true

        @property doCollisionDetection [Boolean]
          @added 1.10.0
            @issue 353
            @description
              Added an option to enable collision detection to prevent labels overlapping on graphs. By default, this value is true.

          @description
            An option for enabling collision detection on labels.

            When this is enabled, labels will be prevented from overlapping by dynamically changing the @code[nthTickVisible] property.

          @default
            true

        @define doCollisionDetectionMethod
          @method doCollisionDetection
            @added 1.10.0
              @issue 353
              @description
                Added an option to enable collision detection to prevent labels overlapping on graphs. By default, this value is true.

            @description
              Gets the doCollisionDetection property

              Used for enabling collision detecion for labels to prevent them from overlapping

            @returns [Boolean]
              @description
                The doCollisionDetection value.

          @method doCollisionDetection
            @added 1.10.0
              @issue 353
              @description
                Added an option to enable collision detection to prevent labels overlapping on graphs. By default, this value is true.

            @description
              Sets the doCollisionDetection property

              Used for enabling collision detecion for labels to prevent them from overlapping

            @arg value [Boolean]
            @returns [Axis]
              @description
                This Axis

      @property series [Array[Object]]
        @added 1.1.0
          @description
            Added a series option to hx.Axis to allow graphs to be created with the fluid api.

        @description
          An array of series objects. Each item in the array is equivalent to a series created using @code[hx.Axis::addSeries] A series is defined as an object with two properties:

          @@codeblock js
            {
              type: 'line',   // The series type
              options: {...}  // The series options
            }

  @method addSeries
    @added 0.15.2
    @description
      Adds a new series to the graph. See the related series type prototype options for what to pass in for the options parameter.

    @arg type [String]
      @description
        The type of series to add. Can be one of 'line', 'bar', 'band', 'scatter' and 'straight-line'

    @arg? options [SeriesOptions]
      @description
        The options to pass to the series when constructing.

    @returns [Series]
      @description
        Returns a Series instance - LineSeries, BarSeries, BandSeries, ScatterSeries and StraightLineSeries are all instances of Series - one of these types will be returned.

  @method series
    @added 0.15.2
    @description
      Gets the list of the series attached to this axis

    @returns [Array[Series]]
      @description
        The list of series

  @method series
    @added 0.15.2
    @description
      Sets the list of the series attached to this axis

    @arg series [Array[Series]]
      @description
        The series objects this axis should use.

    @returns [Axis]
      @description
        This Axis

  @property x [Object]
    @added 0.15.2
    @method scaleType
      @description
        Sets the scaleType. Should be one of 'linear', 'discrete' or 'time'. 'discrete' should be used for bar charts, and 'linear' and 'time' for line graphs (in general). The 'time' scale type is similar to linear, but picks the ticks so that they align on sensible times.

      @arg value [String]
      @returns [Axis]
        @description
          This Axis

    @method scaleType
      @description
        Gets the scaleType. Will be one of 'linear', 'discrete' or 'time'.

      @returns [String]
        @description
          The scaleType value.

    @method visible
      @description
        Sets the visibility state

        Whether or not the x axis should be visible. The default is true.

      @arg value [Boolean]
      @returns [Axis]
        @description
          This Axis

    @method visible
      @description
        Gets the visibility state

        Whether or not the x axis should be visible. The default is true.

      @returns [Boolean]
        @description
          The visible value.

    @method formatter
      @description
        Sets the formatter

        The formatter is function that formats the strings that are displayed at the ticks of the axis. It is a function with first argument that will typically be a number (although it depends on the type of the values in your data), and should return a string. The default is hx.format.si(2), which uses SI notation for numbers, and passes strings through untouched.

      @arg formatter [Function]
        @arg value [Number]
        @returns [String]
          @description
            The number formatted as a string.

      @returns [Axis]
        @description
          This Axis

    @method formatter
      @description
        Gets the formatter

        The formatter is function that formats the strings that are displayed at the ticks of the axis. It is a function with first argument that will typically be a number (although it depends on the type of the values in your data), and should return a string. The default is hx.format.si(2), which uses SI notation for numbers, and passes strings through untouched.

      @returns [Function]
        @description
          The formatter value.

        @arg value [Number]
        @returns String
          @description
            The number formatted as a string.

    @method tickRotation
      @description
        Sets the rotation of the ticks in degrees.

      @arg angle [Number]
        @description
          The rotation of the tick labels in degrees.

      @returns [Axis]
        @description
          This Axis

    @method tickRotation
      @description
        Gets the rotation of the tick labels in degrees.

      @returns [Number]
        @description
          The tickRotation value.

    @method min
      @description
        Sets the minimum value the axis should show. If set to 'auto' the minimum value will calculated from the data in the series. The default is 'auto'.

      @arg value [Number/String]
      @returns [Axis]
        @description
          This Axis

    @method min
      @description
        Gets the minimum value the axis should show. If set to 'auto' the minimum value will calculated from the data in the series. The default is 'auto'.

      @returns [Number/String]
        @description
          The min value.

    @method max
      @description
        Sets the maximum value the axis should show. If set to 'auto' the maximum value will calculated from the data in the series. The default is 'auto'.

      @arg value [Number/String]
      @returns [Axis]
        @description
          This Axis

    @method max
      @description
        Gets the maximum value the axis should show. If set to 'auto' the maximum value will calculated from the data in the series. The default is 'auto'.

      @returns [Number/String]
        @description
          The max value.

    @method discretePadding
      @description
        Sets the discretePadding property

        The padding between discrete values on the x axis. Should be a value between 0 and 1. This will affect anything that uses the band width of a tick (ie bar series). The default is 0.1, which results in reserving 10% of the band width for padding, resulting in separation of groups of bar series.

      @arg value [Number]
      @returns [Axis]
        @description
          This Axis

    @method discretePadding
      @description
        Gets the discretePadding property

        The padding between discrete values on the x axis. Should be a value between 0 and 1. This will affect anything that uses the band width of a tick (ie bar series). The default is 0.1, which results in reserving 10% of the band width for padding, resulting in separation of groups of bar series.

      @returns [Number]
        @description
          The discretePadding value.

    @method discreteLabels
      @description
        Sets the discreteLabels property

        The set of labels to use for a discrete x axis. This is similar to setting the min and max in linear scale case. The default is 'auto', which will mean that the axis works out it's labels from the series data.

      @arg value [Array[String]]
      @returns [Axis]
        @description
          This Axis

    @method discreteLabels
      @description
        Gets the discreteLabels property

        The set of labels to use for a discrete x axis. This is similar to setting the min and max in linear scale case. The default is 'auto', which will mean that the axis works out it's labels from the series data.

      @returns [Array[String]]
        @description
          The discreteLabels value.

    @method tickSpacing
      @description
        Sets the preferred spacing (in pixels) between ticks on the axis. The axis will do it's best to keep close to this value, but may use other spacing to ensure that other conditions can be met such as the min, max and having 'nice' vales at the ticks. The default is 50.

      @arg value [Number]
      @returns [Axis]
        @description
          This Axis

    @method tickSpacing
      @description
        Gets the preferred spacing (in pixels) between ticks on the axis. The axis will do it's best to keep close to this value, but may use other spacing to ensure that other conditions can be met such as the min, max and having 'nice' vales at the ticks. The default is 50.

      @returns [Number]
        @description
          The tickSpacing value.

    @method title
      @description
        Sets the title of the axis

      @arg value [String]
      @returns [Axis]
        @description
          This Axis

    @method title
      @description
        Gets the title of the axis

      @returns [String]
        @description
          The title value.

    @method scalePaddingMin
      @description
        Sets the scalePaddingMin property

      @arg value [Number]
      @returns [Axis]
        @description
          This Axis

    @method scalePaddingMin
      @description
        Gets the scalePaddingMin property

      @returns [Number]
        @description
          The scalePaddingMin value.

    @method scalePaddingMax
      @description
        Sets the padding to apply to the end of the axis domain. This option makes it possible to stop the series from touching the axes, if that is wanted. This value is a proportion of the data range, so 0.1 will add an extra 10% to the end of the domain. The default value is 0, which applies no padding.

      @arg value [Number]
      @returns [Axis]
        @description
          This Axis

    @method scalePaddingMax
      @description
        Gets the padding applied to the end of the axis domain. This option makes it possible to stop the series from touching the axes, if that is wanted. This value is a proportion of the data range, so 0.1 will add an extra 10% to the end of the domain. The default value is 0, which applies no padding.

      @returns [Number]
        @description
          The scalePaddingMax value.

    @method ticksAll
      @description
        Sets whether ticks should be shown for every data point.

      @arg value [Boolean]
      @returns [Axis]
        @description
          This Axis

    @method ticksAll
      @description
        Gets whether ticks should be shown for every data point.

      @returns [Boolean]
        @description
          The ticksAll value.

    @method gridLines
      @description
        Sets whether or not grid lines should be used for the axis ticks. True means the grid lines will be shown.

      @arg value [Boolean]
      @returns [Axis]
        @description
          This Axis

    @method gridLines
      @description
        Gets whether or not grid lines should be used for the axis ticks. True means the grid lines will be shown.

      @returns [Boolean]
        @description
          The gridLines value.

    @method nthTickVisible
      @description
        Sets which ticks should display text. If set to 1, then every tick will have text. If set to 2 every other tick will display text. If set to 3, every third tick will show text. And so on..

      @arg value [Number]
      @returns [Axis]
        @description
          This Axis

    @method nthTickVisible
      @description
        Gets which ticks should display text. If set to 1, then every tick will have text. If set to 2 every other tick will display text. If set to 3, every third tick will show text. And so on..

      @returns [Number]
        @description
          The nthTickVisible value.

    @method axisTickLabelPosition
      @description
        Sets the axisTickLabelPosi property

        Allows positioning of the tick labels. The options are 'axis' or 'bottom'. 'axis' will cause the labels to stick to the axis, 'bottom' will cause the labels to stay at the bottom of the graph area.

      @arg value [Boolean]
      @returns [Axis]
        @description
          This Axis

    @method axisTickLabelPosition
      @description
        Gets the axisTickLabelPosi property

        Used for positioning of the tick labels. The options are 'axis' or 'bottom'. 'axis' will cause the labels to stick to the axis, 'bottom' will cause the labels to stay at the bottom of the graph area.

      @returns [Boolean]
        @description
          The axisTickLabelPosition value.

    @method showTicks
      @description
        Sets the showTicks property. If true, the axis ticks (text and tick marker) will be visible, if false they will be hidden.

      @arg value [Boolean]
      @returns [Axis]
        @description
          This Axis

    @method showTicks
      @description
        Gets the showTicks property. If true, the axis ticks (text and tick marker) will be visible, if false they will be hidden.

      @returns [Boolean]
        @description
          The showTicks value.

    @method doCollisionDetection
      @added 1.10.0
        @issue 353
        @description
          Added an option to enable collision detection to prevent labels overlapping on graphs. By default, this value is true.

      @description
        Gets the doCollisionDetection property

        Used for enabling collision detecion for labels to prevent them from overlapping

      @returns [Boolean]
        @description
          The doCollisionDetection value.

    @method doCollisionDetection
      @added 1.10.0
        @issue 353
        @description
          Added an option to enable collision detection to prevent labels overlapping on graphs. By default, this value is true.

      @description
        Sets the doCollisionDetection property

        Used for enabling collision detecion for labels to prevent them from overlapping

      @arg value [Boolean]
      @returns [Axis]
        @description
          This Axis

  @property y [Object]
    @added 0.15.2
    @method scaleType
      @description
        Sets the scaleType. Should be one of 'linear', 'discrete' or 'time'. 'discrete' should be used for bar charts, and 'linear' and 'time' for line graphs (in general). The 'time' scale type is similar to linear, but picks the ticks so that they align on sensible times.

      @arg value [String]
      @returns [Axis]
        @description
          This Axis

    @method scaleType
      @description
        Gets the scaleType. Will be one of 'linear', 'discrete' or 'time'.

      @returns [String]
        @description
          The scaleType value.

    @method visible
      @description
        Sets the visibility state

        Whether or not the x axis should be visible. The default is true.

      @arg value [Boolean]
      @returns [Axis]
        @description
          This Axis

    @method visible
      @description
        Gets the visibility state

        Whether or not the x axis should be visible. The default is true.

      @returns [Boolean]
        @description
          The visible value.

    @method formatter
      @description
        Sets the formatter

        The formatter is function that formats the strings that are displayed at the ticks of the axis. It is a function with first argument that will typically be a number (although it depends on the type of the values in your data), and should return a string. The default is hx.format.si(2), which uses SI notation for numbers, and passes strings through untouched.

      @arg formatter [Function]
        @arg value [Number]
        @returns [String]
          @description
            The number formatted as a string.

      @returns [Axis]
        @description
          This Axis

    @method formatter
      @description
        Gets the formatter

        The formatter is function that formats the strings that are displayed at the ticks of the axis. It is a function with first argument that will typically be a number (although it depends on the type of the values in your data), and should return a string. The default is hx.format.si(2), which uses SI notation for numbers, and passes strings through untouched.

      @returns [Function]
        @description
          The formatter value.

        @arg value [Number]
        @returns String
          @description
            The number formatted as a string.

    @method tickRotation
      @description
        Sets the rotation of the ticks in degrees.

      @arg angle [Number]
        @description
          The rotation of the tick labels in degrees.

      @returns [Axis]
        @description
          This Axis

    @method tickRotation
      @description
        Gets the rotation of the tick labels in degrees.

      @returns [Number]
        @description
          The tickRotation value.

    @method min
      @description
        Sets the minimum value the axis should show. If set to 'auto' the minimum value will calculated from the data in the series. The default is 'auto'.

      @arg value [Number/String]
      @returns [Axis]
        @description
          This Axis

    @method min
      @description
        Gets the minimum value the axis should show. If set to 'auto' the minimum value will calculated from the data in the series. The default is 'auto'.

      @returns [Number/String]
        @description
          The min value.

    @method max
      @description
        Sets the maximum value the axis should show. If set to 'auto' the maximum value will calculated from the data in the series. The default is 'auto'.

      @arg value [Number/String]
      @returns [Axis]
        @description
          This Axis

    @method max
      @description
        Gets the maximum value the axis should show. If set to 'auto' the maximum value will calculated from the data in the series. The default is 'auto'.

      @returns [Number/String]
        @description
          The max value.

    @method discretePadding
      @description
        Sets the discretePadding property

        The padding between discrete values on the x axis. Should be a value between 0 and 1. This will affect anything that uses the band width of a tick (ie bar series). The default is 0.1, which results in reserving 10% of the band width for padding, resulting in separation of groups of bar series.

      @arg value [Number]
      @returns [Axis]
        @description
          This Axis

    @method discretePadding
      @description
        Gets the discretePadding property

        The padding between discrete values on the x axis. Should be a value between 0 and 1. This will affect anything that uses the band width of a tick (ie bar series). The default is 0.1, which results in reserving 10% of the band width for padding, resulting in separation of groups of bar series.

      @returns [Number]
        @description
          The discretePadding value.

    @method discreteLabels
      @description
        Sets the discreteLabels property

        The set of labels to use for a discrete x axis. This is similar to setting the min and max in linear scale case. The default is 'auto', which will mean that the axis works out it's labels from the series data.

      @arg value [Array[String]]
      @returns [Axis]
        @description
          This Axis

    @method discreteLabels
      @description
        Gets the discreteLabels property

        The set of labels to use for a discrete x axis. This is similar to setting the min and max in linear scale case. The default is 'auto', which will mean that the axis works out it's labels from the series data.

      @returns [Array[String]]
        @description
          The discreteLabels value.

    @method tickSpacing
      @description
        Sets the preferred spacing (in pixels) between ticks on the axis. The axis will do it's best to keep close to this value, but may use other spacing to ensure that other conditions can be met such as the min, max and having 'nice' vales at the ticks. The default is 50.

      @arg value [Number]
      @returns [Axis]
        @description
          This Axis

    @method tickSpacing
      @description
        Gets the preferred spacing (in pixels) between ticks on the axis. The axis will do it's best to keep close to this value, but may use other spacing to ensure that other conditions can be met such as the min, max and having 'nice' vales at the ticks. The default is 50.

      @returns [Number]
        @description
          The tickSpacing value.

    @method title
      @description
        Sets the title of the axis

      @arg value [String]
      @returns [Axis]
        @description
          This Axis

    @method title
      @description
        Gets the title of the axis

      @returns [String]
        @description
          The title value.

    @method scalePaddingMin
      @description
        Sets the scalePaddingMin property

      @arg value [Number]
      @returns [Axis]
        @description
          This Axis

    @method scalePaddingMin
      @description
        Gets the scalePaddingMin property

      @returns [Number]
        @description
          The scalePaddingMin value.

    @method scalePaddingMax
      @description
        Sets the padding to apply to the end of the axis domain. This option makes it possible to stop the series from touching the axes, if that is wanted. This value is a proportion of the data range, so 0.1 will add an extra 10% to the end of the domain. The default value is 0, which applies no padding.

      @arg value [Number]
      @returns [Axis]
        @description
          This Axis

    @method scalePaddingMax
      @description
        Gets the padding applied to the end of the axis domain. This option makes it possible to stop the series from touching the axes, if that is wanted. This value is a proportion of the data range, so 0.1 will add an extra 10% to the end of the domain. The default value is 0, which applies no padding.

      @returns [Number]
        @description
          The scalePaddingMax value.

    @method ticksAll
      @description
        Sets whether ticks should be shown for every data point.

      @arg value [Boolean]
      @returns [Axis]
        @description
          This Axis

    @method ticksAll
      @description
        Gets whether ticks should be shown for every data point.

      @returns [Boolean]
        @description
          The ticksAll value.

    @method gridLines
      @description
        Sets whether or not grid lines should be used for the axis ticks. True means the grid lines will be shown.

      @arg value [Boolean]
      @returns [Axis]
        @description
          This Axis

    @method gridLines
      @description
        Gets whether or not grid lines should be used for the axis ticks. True means the grid lines will be shown.

      @returns [Boolean]
        @description
          The gridLines value.

    @method nthTickVisible
      @description
        Sets which ticks should display text. If set to 1, then every tick will have text. If set to 2 every other tick will display text. If set to 3, every third tick will show text. And so on..

      @arg value [Number]
      @returns [Axis]
        @description
          This Axis

    @method nthTickVisible
      @description
        Gets which ticks should display text. If set to 1, then every tick will have text. If set to 2 every other tick will display text. If set to 3, every third tick will show text. And so on..

      @returns [Number]
        @description
          The nthTickVisible value.

    @method axisTickLabelPosition
      @description
        Sets the axisTickLabelPosi property

        Allows positioning of the tick labels. The options are 'axis' or 'bottom'. 'axis' will cause the labels to stick to the axis, 'bottom' will cause the labels to stay at the bottom of the graph area.

      @arg value [Boolean]
      @returns [Axis]
        @description
          This Axis

    @method axisTickLabelPosition
      @description
        Gets the axisTickLabelPosi property

        Used for positioning of the tick labels. The options are 'axis' or 'bottom'. 'axis' will cause the labels to stick to the axis, 'bottom' will cause the labels to stay at the bottom of the graph area.

      @returns [Boolean]
        @description
          The axisTickLabelPosition value.

    @method showTicks
      @description
        Sets the showTicks property. If true, the axis ticks (text and tick marker) will be visible, if false they will be hidden.

      @arg value [Boolean]
      @returns [Axis]
        @description
          This Axis

    @method showTicks
      @description
        Gets the showTicks property. If true, the axis ticks (text and tick marker) will be visible, if false they will be hidden.

      @returns [Boolean]
        @description
          The showTicks value.

    @method series
      @description
        Gets the series attached to this axis.

      @returns [Array[Series]]
        @description
          The list of Series instances attached to this axis.

    @method series
      @description
        Sets the series attached to this axis.

      @arg series [Array[Series]]
        @description
          The list of Series instances this axis should have.

      @returns [Axis]
        @description
          This Axis

    @method doCollisionDetection
      @added 1.10.0
        @issue 353
        @description
          Added an option to enable collision detection to prevent labels overlapping on graphs. By default, this value is true.

      @description
        Gets the doCollisionDetection property

        Used for enabling collision detecion for labels to prevent them from overlapping

      @returns [Boolean]
        @description
          The doCollisionDetection value.

    @method doCollisionDetection
      @added 1.10.0
        @issue 353
        @description
          Added an option to enable collision detection to prevent labels overlapping on graphs. By default, this value is true.

      @description
        Sets the doCollisionDetection property

        Used for enabling collision detecion for labels to prevent them from overlapping

      @arg value [Boolean]
      @returns [Axis]
        @description
          This Axis

@inline 0.9.0/api-series-bar.um
@prototype BarSeries
  @description
    A standard bar series. Should be used with a discrete axis.

  @property name [String]
    @deprecated 0.15.2
      @description
        Use @code[series.title(name)] to set the series name, @code[series.title()] to get the name.

    @removed 1.0.0
      @description
        Use @code[series.title(name)] to set the series name, @code[series.title()] to get the name.

    @description
      The series name, used by the hover over labels.

  @property color [String]
    @deprecated 0.15.2
      @description
        Use @code[series.fillColor(color)] to set the color, @code[series.fillColor()] to get the color.

    @removed 1.0.0
      @description
        Use @code[series.fillColor(color)] to set the color, @code[series.fillColor()] to get the color.

    @description
      The default colour that all bars should use. This can be overridden for each individual bar (see setData).

  @property group [String]
    @deprecated 0.15.2
      @description
        Use @code[series._new_group('group-name')] to set the group, @code[series.new_group()] to get the group. The _new_ prefix will be dropped in 1.0.0 - it is required to avoid naming clash with existing properties until then.

    @removed 1.0.0
      @description
        Use @code[series.group(group)] to set the series group, @code[series.group()] to get the group.

    @description
      Set this string to group series together. All series with the same group will be stacked together. For bar series, this will produce a stacked bar chart. Multiple groups can be used to create multiple stacked bar series within an axis.

  @method setData
    @deprecated 0.15.2
      @description
        Use @code[series.data(data)] to set new data, @code[series.data()] to get the current data.

    @removed 1.0.0
      @description
        Use @code[series.data(data)] to set new data, @code[series.data()] to get the current data.

    @description
      Sets the data this series should display.

    @arg data [Data]
      @description
        An array of objects with x, y properties.
        The data should be of the form:
        @@codeblock json
          [
            {x: 0, y: 10},
            {x: 1, y: 11},
            {x: 2, y: 16},
            {x: 3, y: 12}
          ]

        The color of the bars can be set per bar as well:
        @@codeblock json
          [
            {x: 0, y: 10, color: hx.color.graph[1]},
            {x: 1, y: 11, color: hx.color.graph[2]},
            {x: 2, y: 16, color: hx.color.graph[3]},
            {x: 3, y: 12, color: hx.color.graph[4]}
          ]

  @extends EventEmitter
  @property class [String]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use @code[series._new_class(class)] to set the title. This method will be renamed to @code[series.class()] in 1.0.0. The _new_ prefix is required to avoid naming clash with existing properties. To get the class use @code[series._new_class()] .

    @removed 1.0.0
      @description
        Use @code[series.class(class)] to set the series class, @code[series.class()] to get the class.

    @description
      An optional additional class (or list of space separated classes) to give the series. This can be used to change the styles for a series.

  @constructor
    @added 0.15.2
    @arg? options [Object]
      @property title [String]
        @description
          The title of the series

        @default
          ''

      @property group [String]
        @description
          The group the series belongs to. Series with the same group will be stacked on top of each other.

        @default
          undefined

      @property labelsEnabled [Boolean]
        @description
          Whether labels should be displayed for this series. True if they are enabled, false if disabled

        @default
          true

      @property labelRenderer [Function]
        @description
          The label renderer for this series.

        @arg element [HTMLElement]
          @description
            The container populated

        @arg data [Object]
          @description
            The data provided for rendering the label

      @property fillColor [String]
        @description
          The color used to fill the series with as a CSS color string.

        @default
          [hx.theme.plot.colors[1]]

      @property class [String]
        @description
          The additional class applied to the series svg element.

        @default
          ''

      @property data [Array[Object]]
        @description
          n array of objects with x,y properties. The data should be of the form:

          @@codeblock js
            [
              {x: 0, y: 10},
              {x: 1, y: 11},
              {x: 2, y: 16},
              {x: 3, y: 12}
            ]

          The color of the bars can also be set per bar as well:

          @@codeblock js
            [
              {x: 0, y: 10, color: hx.color.graph[1]},
              {x: 1, y: 11, color: hx.color.graph[2]},
              {x: 2, y: 16, color: hx.color.graph[3]},
              {x: 3, y: 12, color: hx.color.graph[4]}
            ]

      @property labelValuesExtractor [Function]
        @description
          The label values extractor that returns the values to display in the label

        @arg series [Series]
          @description
            The Series this label extractor has been applied to

        @arg point [Object]
          @description
            The data point to show label data for

        @arg? xValueLookup [Function]
          @description
            Looks up the x value from the data. May be undefined.

          @returns [Any]

        @arg? yValueLookup [Function]
          @description
            Looks up the y value from the data. May be undefined.

          @returns [Any]

        @returns [Array[Object]]
          @property name [String]
            @description
              The name of the label entry

          @property value [Any]
            @description
              The value of the label entry

          @property formatter [Function]
            @decription
              @description
                A formatter function that can be used to format the value.

            @arg value [Any]
              @description
                The value to format

            @returns String
              @description
                The formatted string

      @property labelFormatters [Object]
        @description
          Optional label formatters for each label value.

          @@codeblock js
            new hx.BarSeries({
              labelFormatters: {
                'x': function(value) { return x },
                'y': hx.format.si(3)
              }
            })

  @method createLabelValues [Function]
    @added 0.15.2
    @deprecated 0.15.2
      @description
        Use labelValuesExtractor() instead.

    @removed 1.0.0
      @description
        Use labelValuesExtractor() instead.

    @arg dataPoint [Object]
      @property x [Number]
      @property y [Number]

  @method labelFormatter
    @added 0.15.2
    @description
      Sets a label formatter

    @arg name [String]
      @description
        The formatter to set

    @arg formatter [Function]
      @description
        The formatter to use. The formatter converts a value to a string

      @arg value [Any]
      @returns [String]
        @description
          The formatted String

    @returns [BandSeries]
      @description
        This BandSeries

  @method labelFormatter
    @added 0.15.2
    @description
      Gets a label formatter

    @arg name [String]
      @description
        The formatter to get

    @returns [Function]
      @description
        The formatter used for the label component. The formatter converts a value to a string. If there was no formatter set, this will return undefined.

      @arg value [Any]
      @returns String
        @description
          The formatted String

  @method labelValuesExtractor
    @added 0.15.2
    @description
      Sets the label values extractor.

    @arg extractor [Function]
      @description
        Returns the values to display in the label

      @arg series [Series]
        @description
          The Series this label extractor has been applied to

      @arg point [Object]
        @description
          The data point to show label data for

      @arg? xValueLookup [Function]
        @description
          Looks up the x value from the data. May be undefined.

        @returns [Any]

      @arg? yValueLookup [Function]
        @description
          Looks up the y value from the data. May be undefined.

        @returns [Any]

      @returns [Array[Object]]
        @property name [String]
          @description
            The name of the label entry

        @property value [Any]
          @description
            The value of the label entry

        @property formatter [Function]
          @decription
            @description
              A formatter function that can be used to format the value.

          @arg value [Any]
            @description
              The value to format

          @returns String
            @description
              The formatted string

    @returns [BandSeries]
      @description
        This BandSeries

  @method labelValuesExtractor
    @added 0.15.2
    @description
      Gets the label values extractor.

    @returns [Function]
      @description
        Returns the values to display in the label

      @arg series [Series]
        @description
          The Series this label extractor has been applied to

      @arg point [Object]
        @description
          The data point to show label data for

      @arg? xValueLookup [Function]
        @description
          Looks up the x value from the data. May be undefined.

        @returns Any

      @arg? yValueLookup [Function]
        @description
          Looks up the y value from the data. May be undefined.

        @returns Any

      @returns [Array[Object]]
        @property name [String]
          @description
            The name of the label entry

        @property value [Any]
          @description
            The value of the label entry

        @property formatter [Function]
          @decription
            @description
              A formatter function that can be used to format the value.

          @arg value [Any]
            @description
              The value to format

          @returns String
            @description
              The formatted string

  @method labelsEnabled
    @added 0.15.2
    @description
      Sets whether labels should be used for this series

    @arg enabled [Boolean]
      @description
        True to enable, false to disable

    @returns [BarSeries]
      @description
        This BarSeries

  @method labelsEnabled
    @added 0.15.2
    @description
      Gets whether labels should be displayed for this series

    @returns [Boolean]
      @description
        True if they are enabled, false if disabled

  @method labelRenderer
    @added 0.15.2
    @description
      Sets the label renderer for this series. This allows creation of custom labels

    @arg renderer [Function]
      @arg element [HtmlElement]
        @description
          The container to populate

      @arg data [Object]
        @description
          The data available to be used when rendering the label

    @returns [BarSeries]
      @description
        This BarSeries

  @method labelRenderer
    @added 0.15.2
    @description
      Gets the label renderer for this series.

    @returns [Function]
      @arg element [HTMLElement]
        @description
          The container populated

      @arg data [Object]
        @description
          The data provided for rendering the label

  @method title
    @added 0.15.2
    @description
      Sets the title of the series

    @arg title [String]
      @description
        The title to give the series - this will appear in the hover labels.

    @returns [BarSeries]
      @description
        This BarSeries

  @method title
    @added 0.15.2
    @description
      Gets the title of the series

    @returns [String]
      @description
        The title of the series

  @method _new_class
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Sets an additional class to give the series svg elements.

    @arg class [String]
      @description
        The class to give the series.

    @returns [BarSeries]
      @description
        This BarSeries

  @method _new_class
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Gets the additional class applied to the series svg elements.

    @returns [String]
      @description
        The additional class applied to the series.

  @method _new_group
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Sets the group the series belongs to. Series with the same group will be visually grouped together.

    @arg group [String]
      @description
        The class to give the series.

    @returns [BarSeries]
      @description
        This BarSeries

  @method _new_group
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Gets the group the series belongs to.

    @returns [String]
      @description
        The group.

  @method fillColor
    @added 0.15.2
    @description
      Sets the color to fill the bar with

    @arg color [String]
      @description
        A CSS color string.

    @returns [BarSeries]
      @description
        This BarSeries

  @method fillColor
    @added 0.15.2
    @description
      Gets the color used to fill the bar

    @returns [String]
      @description
        The color as a CSS color string

  @method data
    @added 0.15.2
    @description
      Sets the data for this series

    @arg data [Array[Object]]
      @description
        An array of objects with x,y properties. The data should be of the form:

        @@codeblock js
          [
            {x: 0, y: 10},
            {x: 1, y: 11},
            {x: 2, y: 16},
            {x: 3, y: 12}
          ]

        The color of the bars can also be set per bar as well:

        @@codeblock js
          [
            {x: 0, y: 10, color: hx.color.graph[1]},
            {x: 1, y: 11, color: hx.color.graph[2]},
            {x: 2, y: 16, color: hx.color.graph[3]},
            {x: 3, y: 12, color: hx.color.graph[4]}
          ]

    @returns [BarSeries]
      @description
        This BarSeries

  @method data
    @added 0.15.2
    @description
      Gets the data for this series

    @returns [Array[Object]]
      @description
        An array of objects with x,y properties. The data should be of the form:

        @@codeblock js
          [
            {x: 0, y: 10},
            {x: 1, y: 11},
            {x: 2, y: 16},
            {x: 3, y: 12}
          ]

        The color of the bars can also be set per bar as well:

        @@codeblock js
          [
            {x: 0, y: 10, color: hx.color.graph[1]},
            {x: 1, y: 11, color: hx.color.graph[2]},
            {x: 2, y: 16, color: hx.color.graph[3]},
            {x: 3, y: 12, color: hx.color.graph[4]}
          ]

  @method class
    @added 1.0.0
    @description
      @notice Note
      Sets an additional class to give the series svg elements.

    @arg class [String]
      @description
        The class to give the series.

    @returns [BarSeries]
      @description
        This BarSeries

  @method class
    @added 1.0.0
    @description
      Gets the additional class applied to the series svg elements.

    @returns [String]
      @description
        The additional class applied to the series.

  @method group
    @added 1.0.0
    @description
      Sets the group the series belongs to. Series with the same group will be visually grouped together.

    @arg group [String]
      @description
        The class to give the series.

    @returns [BarSeries]
      @description
        This BarSeries

  @method group
    @added 1.0.0
    @description
      Gets the group the series belongs to.

    @returns [String]
      @description
        The group.

  @event click [Object]
    @description
      The event emitted when a series is clicked.

    @property event
      @description
        The click event data.

    @property data
      @description
        The data of the bar that was clicked.

    @property series
      @description
        The selected series.

@prototype LineSeries
  @updated 0.11.0
    @description
      Gradient stroke and fill is now possible (by using an array for the color properties)

  @bugfix 1.6.0
    @issue 89
    @description
      Updated line series so that the labels show for the first/last points

  @description
    A standard line series, made from a set of (x, y) coordinates.

  @property name [String]
    @deprecated 0.15.2
      @description
        Use @code[series.title(name)] to set the series name, @code[series.title()] to get the name.

    @removed 1.0.0
      @description
        Use @code[series.title(name)] to set the series name, @code[series.title()] to get the name.

    @description
      The series name, used by the hover over labels.

  @property stroke [Boolean]
    @deprecated 0.15.2
      @description
        Use @code[series.strokeEnabled(enabled)] to set the state, @code[series.strokeEnabled()] to get it.

    @removed 1.0.0
      @description
        Use @code[series.strokeEnabled(enabled)] to set the state, @code[series.strokeEnabled()] to get it.

    @description
      Whether or not the path of the series should be stroked. The default is true.

  @property color [String]
    @deprecated 0.15.2
      @description
        Use @code[series.strokeColor(color)] to set the color, @code[series.strokeColor()] to get the color.

    @removed 1.0.0
      @description
        Use @code[series.strokeColor(color)] to set the color, @code[series.strokeColor()] to get the color.

    @description
      A css string color to stroke the path line with.

  @property fill [Boolean]
    @deprecated 0.15.2
      @description
        Use @code[series.fillEnabled(enabled)] to set the state, @code[series.fillEnabled()] to get it.

    @removed 1.0.0
      @description
        Use @code[series.fillEnabled(enabled)] to set the state, @code[series.fillEnabled()] to get it.

    @description
      Whether or not to fill the area below the series. Used to create area graphs. The default is false.

  @property fillColor [String]
    @deprecated 0.15.2
      @description
        Use @code[series._new_fillColor(color)] to set the color, @code[series._new_fillColor()] to get the color.

    @removed 1.0.0
      @description
        Use @code[series.fillColor(color)] to set the color, @code[series.fillColor()] to get the color.

    @description
      A css string color to fill the path line with.

  @property feather [Number]
    @updated 0.11.0
      @description
        series.feather can now be set to false to disable feathering

    @deprecated 0.15.2
      @description
        Use @code[sampleThreshold()] to get the feather value, @code[sampleThreshold(value)] to set it.

    @removed 1.0.0
      @description
        Use @code[sampleThreshold()] to get the feather value, @code[sampleThreshold(value)] to set it.

    @description
      The maximum number of points in the curve drawn. This is used to reduce the number of points in the svg curve for the series. This property can be set to false to disable feathering. The default is 200.

  @property markers [Boolean]
    @deprecated 0.15.2
      @description
        Use @code[series.markersEnabled(enabled)] to set the state, @code[series.markersEnabled()] to get it.

    @removed 1.0.0
      @description
        Use @code[series.markersEnabled(enabled)] to set the state, @code[series.markersEnabled()] to get it.

    @description
      Whether or not to display markers at the data points. The default is false.

  @property markerRadius [Number]
    @deprecated 0.15.2
      @description
        Use @code[_new_markerRadius(radius)] to set the radius, @code[_new_markerRadius()] to get the radius.

    @removed 1.0.0
      @description
        Use @code[_new_markerRadius(radius)] to set the radius, @code[_new_markerRadius()] to get the radius.

    @description
      The radius of the markers in pixels, if they are displayed.

  @property markerColor [String]
    @deprecated 0.15.2
      @description
        Use @code[seriesmarkerFillColor(color)] to set the color, @code[seriesmarkerFillColor()] to get the color.

    @removed 1.0.0
      @description
        Use @code[seriesmarkerFillColor(color)] to set the color, @code[seriesmarkerFillColor()] to get the color.

    @description
      A css string color to fill the markers with. If not set, the line color will be used.

  @property group [String]
    @deprecated 0.15.2
      @description
        Use @code[series._new_group('group-name')] to set the group, @code[series.new_group()] to get the group. The _new_ prefix will be dropped in 1.0.0 - it is required to avoid naming clash with existing properties until then.

    @removed 1.0.0
      @description
        Use @code[series.group(name)] to set the series group, @code[series.group()] to get the group.

    @description
      Set this string to group series together. All series with the same group will be stacked together. For line series, this will produce a stacked line/area chart. Multiple groups can be used to produce multiple sets of stacked series within a single axis.

  @method setData
    @deprecated 0.15.2
      @description
        Use @code[series.data(data)] to set new data, @code[series.data()] to get the current data.

    @removed 1.0.0
      @description
        Use @code[series.data(data)] to set new data, @code[series.data()] to get the current data.

    @description
      Sets the data this series should display.

    @arg data [Data]
      @description
        An array of objects with x and y properties.
        The data should be of the form:
        @@codeblock json
          [
            {x: 0, y: 10},
            {x: 1, y: 11},
            {x: 2, y: 16},
            {x: 3, y: 12}
          ]

  @extends EventEmitter
  @property color [Array[String]]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use @code[series.strokeColor(color)] to set the color, @code[series.strokeColor()] to get the color.

    @removed 1.0.0
      @description
        Use @code[series.strokeColor(color)] to set the color, @code[series.strokeColor()] to get the color.

    @description
      A css string color to stroke the path line with.
      To color the line with a gradient, this may be set to an array:
      @@codeblock
        series.series.color = [
          {
            yValue: 0,
            color: hx.theme.plot.negativeCol
          },
          {
            yValue: 90,
            color: '#555'
          },
          {
            yValue: 110,
            color: '#555'
          },
          {
            yValue: 200,
            color: hx.theme.plot.negativeCol
          }
        ]

      The colors will be linearly interpolated vertically between the y values.

  @property class [String]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use @code[series._new_class(class)] to set the title. This method will be renamed to @code[series.class()] in 1.0.0. The _new_ prefix is required to avoid naming clash with existing properties. To get the class use @code[series._new_class()] .

    @removed 1.0.0
      @description
        Use @code[series.class(class)] to set the series class, @code[series.class()] to get the class.

    @description
      An optional additional class (or list of space separated classes) to give the series. This can be used to change the styles for a series, for example by making a line series dashed.

  @method createLabelValues [Function]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use labelValuesExtractor() instead.

    @removed 1.0.0
      @description
        Use labelValuesExtractor() instead.

    @description
      Creates the list of values to show in the hover-over labels. The default is that the x and y values will be returned.

    @arg dataPoint [Object]
      @property x [Number]
        @description
          The x value of the data point

      @property y [Number]
        @description
          The y value of the data point

    @returns [Array[Object]]
      @description
        An array of objects that describe the label values. They should each contain a name, value and formatter property:

      @property name [String]
      @property value [Number]
      @property formatter [Function]
        @arg input [Number]
        @returns String
          @description
            The formatted number.

  @constructor
    @added 0.15.2
    @arg? options [Object]
      @property title [String]
        @description
          The title of the series

        @default
          ''

      @property group [String]
        @description
          The group the series belongs to. Series with the same group will be stacked on top of each other.

        @default
          undefined

      @property labelsEnabled [Boolean]
        @description
          Whether labels should be displayed for this series. True if they are enabled, false if disabled

        @default
          true

      @property labelRenderer [Function]
        @description
          The label renderer for this series.

        @arg element [HTMLElement]
          @description
            The container populated

        @arg data [Object]
          @description
            The data provided for rendering the label

      @property labelInterpolated [Boolean]
        @description
          Whether or not label's values should be interpolated. True if the labels are interpolated between data points, false if the labels snap to the closest data point.

        @default
          false

      @property strokeEnabled [Boolean]
        @description
          Whether the path of this series should be stroked. True if they are enabled, false if disabled.

        @default
          true

      @property strokeColor [String]
        @description
          The color used to stroke the series with as a CSS color string.

        @default
          [hx.theme.plot.colors[0]]

      @property fillEnabled [Boolean]
        @description
          Gets whether the path of this series should be filled. True if they are enabled, false if disabled.

        @default
          false

      @property fillColor [String]
        @description
          The color used to fill the series with as a CSS color string.

        @default
          undefined

      @property class [String]
        @description
          The additional class applied to the series svg element.

        @default
          ''

      @property markersEnabled [Boolean]
        @description
          Whether markers should be placed where there are data points. True if they are enabled, false if disabled

        @default
          false

      @property markerFillColor [String]
        @description
          The color used to fill the markers with as a CSS color string. If undefined the strokeColor will be used.

        @default
          undefined

      @property markerRadius [Number]
        @description
          The radius of the markers in pixels

        @default
          2

      @property data [Array[Object]]
        @description
          An array of objects with x,y properties. The data should be of the form:

          @@codeblock js
            [
              {x: 0, y: 10},
              {x: 1, y: 11},
              {x: 2, y: 16},
              {x: 3, y: 12}
            ]

      @property labelFormatters [Object]
        @description
          Optional label formatters for each label value.

          @@codeblock js
            new hx.LineSeries({
              labelFormatters: {
                'x': function(value) { return x },
                'y': hx.format.si(3)
              }
            })

      @property sampleThreshold [Number]
        @description
          The maximum number of data points to render when displaying the graph. If there are more data points in the series data than this value, the data will be sampled.

        @default
          200

      @property labelValuesExtractor [Function]
        @description
          The label values extractor that returns the values to display in the label

        @arg series [Series]
          @description
            The Series this label extractor has been applied to

        @arg point [Object]
          @description
            The data point to show label data for

        @arg? xValueLookup [Function]
          @description
            Looks up the x value from the data. May be undefined.

          @returns [Any]

        @arg? yValueLookup [Function]
          @description
            Looks up the y value from the data. May be undefined.

          @returns [Any]

        @returns [Array[Object]]
          @property name [String]
            @description
              The name of the label entry

          @property value [Any]
            @description
              The value of the label entry

          @property formatter [Function]
            @decription
              @description
                A formatter function that can be used to format the value.

            @arg value [Any]
              @description
                The value to format

            @returns String
              @description
                The formatted string

  @method labelFormatter
    @added 0.15.2
    @description
      Sets a label formatter

    @arg name [String]
      @description
        The formatter to set

    @arg formatter [Function]
      @description
        The formatter to use. The formatter converts a value to a string

      @arg value [Any]
      @returns [String]
        @description
          The formatted String

    @returns [LineSeries]
      @description
        This LineSeries

  @method labelFormatter
    @added 0.15.2
    @description
      Gets a label formatter

    @arg name [String]
      @description
        The formatter to get

    @returns [Function]
      @description
        The formatter used for the label component. The formatter converts a value to a string. If there was no formatter set, this will return undefined.

      @arg value [Any]
      @returns String
        @description
          The formatted String

  @method title
    @added 0.15.2
    @description
      Sets the title of the series

    @arg title [String]
      @description
        The title to give the series - this will appear in the hover labels.

    @returns [LineSeries]
      @description
        This LineSeries

  @method title
    @added 0.15.2
    @description
      Gets the title of the series

    @returns [String]
      @description
        The title of the series

  @method _new_group
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Sets the group the series belongs to. Series with the same group will be stacked on top of each other.

    @arg group [String]
      @description
        The class to give the series.

    @returns [LineSeries]
      @description
        This LineSeries

  @method _new_group
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Gets the group the series belongs to.

    @returns [String]
      @description
        The group.

  @method labelsEnabled
    @added 0.15.2
    @description
      Sets whether labels should be used for this series

    @arg enabled [Boolean]
      @description
        True to enable, false to disable

    @returns [LineSeries]
      @description
        This LineSeries

  @method labelsEnabled
    @added 0.15.2
    @description
      Gets whether labels should be displayed for this series

    @returns [Boolean]
      @description
        True if they are enabled, false if disabled

  @method labelRenderer
    @added 0.15.2
    @description
      Sets the label renderer for this series. This allows creation of custom labels

    @arg renderer [Function]
      @arg element [HtmlElement]
        @description
          The container to populate

      @arg data [Object]
        @description
          The data available to be used when rendering the label

    @returns [LineSeries]
      @description
        This LineSeries

  @method labelRenderer
    @added 0.15.2
    @description
      Gets the label renderer for this series.

    @returns [Function]
      @arg element [HTMLElement]
        @description
          The container populated

      @arg data [Object]
        @description
          The data provided for rendering the label

  @method sampleThreshold
    @added 0.15.2
    @description
      Sets the maximum number of data points to render when displaying the graph. If there are more data points in the series data than this value, the data will be sampled.

    @arg count [Number]
      @description
        The maximum number of data points to display.

    @returns [LineSeries]
      @description
        This LineSeries

  @method sampleThreshold
    @added 0.15.2
    @description
      Gets the maximum number of points that will be shown before sampling is applied.

    @returns [Number]
      @description
        The sample threshold.

  @method labelValuesExtractor
    @added 0.15.2
    @description
      Sets the label values extractor.

    @arg extractor [Function]
      @description
        Returns the values to display in the label

      @arg series [Series]
        @description
          The Series this label extractor has been applied to

      @arg point [Object]
        @description
          The data point to show label data for

      @arg? xValueLookup [Function]
        @description
          Looks up the x value from the data. May be undefined.

        @returns [Any]

      @arg? yValueLookup [Function]
        @description
          Looks up the y value from the data. May be undefined.

        @returns [Any]

      @returns [Array[Object]]
        @property name [String]
          @description
            The name of the label entry

        @property value [Any]
          @description
            The value of the label entry

        @property formatter [Function]
          @decription
            @description
              A formatter function that can be used to format the value.

          @arg value [Any]
            @description
              The value to format

          @returns String
            @description
              The formatted string

    @returns [LineSeries]
      @description
        This LineSeries

  @method labelValuesExtractor
    @added 0.15.2
    @description
      Gets the label values extractor.

    @returns [Function]
      @description
        Returns the values to display in the label

      @arg series [Series]
        @description
          The Series this label extractor has been applied to

      @arg point [Object]
        @description
          The data point to show label data for

      @arg? xValueLookup [Function]
        @description
          Looks up the x value from the data. May be undefined.

        @returns Any

      @arg? yValueLookup [Function]
        @description
          Looks up the y value from the data. May be undefined.

        @returns Any

      @returns [Array[Object]]
        @property name [String]
          @description
            The name of the label entry

        @property value [Any]
          @description
            The value of the label entry

        @property formatter [Function]
          @decription
            @description
              A formatter function that can be used to format the value.

          @arg value [Any]
            @description
              The value to format

          @returns String
            @description
              The formatted string

  @method strokeEnabled
    @added 0.15.2
    @description
      Sets whether the path for this series should be stroked

    @arg enabled [Boolean]
      @description
        True to enable, false to disable

    @returns [LineSeries]
      @description
        This LineSeries

  @method strokeEnabled
    @added 0.15.2
    @description
      Gets whether the path of this series should be stroked

    @returns [Boolean]
      @description
        True if they are enabled, false if disabled

  @method strokeColor
    @added 0.15.2
    @description
      Sets the color to stroke the series with

    @arg color [String]
      @description
        A CSS color string.

    @returns [LineSeries]
      @description
        This LineSeries

  @method strokeColor
    @added 0.15.2
    @description
      Gets the color used to stroke the series with

    @returns [String]
      @description
        The color as a CSS color string

  @method fillEnabled
    @added 0.15.2
    @description
      Sets whether the path for this series should be filled

    @arg enabled [Boolean]
      @description
        True to enable, false to disable

    @returns [LineSeries]
      @description
        This LineSeries

  @method fillEnabled
    @added 0.15.2
    @description
      Gets whether the path of this series should be filled

    @returns [Boolean]
      @description
        True if they are enabled, false if disabled

  @method _new_fillColor
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in 1.0.0.

      Sets the color to fill the series with

    @arg color [String]
      @description
        A CSS color string.

    @returns [LineSeries]
      @description
        This LineSeries

  @method _new_fillColor
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in 1.0.0.

      Gets the color used to fill the series with

    @returns [String]
      @description
        The color as a CSS color string

  @method _new_class
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Sets an additional class to give the series svg element.

    @arg class [String]
      @description
        The class to give the series.

    @returns [LineSeries]
      @description
        This LineSeries

  @method _new_class
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Gets the additional class applied to the series svg element.

    @returns [String]
      @description
        The additional class applied to the series.

  @method markersEnabled
    @added 0.15.2
    @description
      Sets whether markers should be placed where there are data points

    @arg enabled [Boolean]
      @description
        True to enable, false to disable

    @returns [LineSeries]
      @description
        This LineSeries

  @method markersEnabled
    @added 0.15.2
    @description
      Gets whether markers should be placed where there are data points

    @returns [Boolean]
      @description
        True if they are enabled, false if disabled

  @method markerFillColor
    @added 0.15.2
    @description
      Sets the color to fill the markers with

    @arg color [String]
      @description
        A CSS color string.

    @returns [LineSeries]
      @description
        This LineSeries

  @method markerFillColor
    @added 0.15.2
    @description
      Gets the color used to fill the markers with

    @returns [String]
      @description
        The color as a CSS color string

  @method _new_markerRadius
    @added 0.15.2
    @removed 1.0.0
    @description
      Sets the radius of the markers in pixels

    @arg radius [Number]
      @description
        A CSS color string.

    @returns [LineSeries]
      @description
        This LineSeries

  @method _new_markerRadius
    @added 0.15.2
    @removed 1.0.0
    @description
      Gets the radius of the markers in pixels

    @returns [Number]
      @description
        The radius of a marker in pixels

  @method data
    @added 0.15.2
    @description
      Sets the data for this series

    @arg data [Array[Object]]
      @description
        n array of objects with x,y properties. The data should be of the form:

        @@codeblock js
          [
            {x: 0, y: 10},
            {x: 1, y: 11},
            {x: 2, y: 16},
            {x: 3, y: 12}
          ]

        The color of the bars can also be set per bar as well:

        @@codeblock js
          [
            {x: 0, y: 10, color: hx.color.graph[1]},
            {x: 1, y: 11, color: hx.color.graph[2]},
            {x: 2, y: 16, color: hx.color.graph[3]},
            {x: 3, y: 12, color: hx.color.graph[4]}
          ]

    @returns [LineSeries]
      @description
        This LineSeries

  @method data
    @added 0.15.2
    @description
      Sets the data for this series

    @returns [Array[Object]]
      @description
        n array of objects with x,y properties. The data should be of the form:

        @@codeblock js
          [
            {x: 0, y: 10},
            {x: 1, y: 11},
            {x: 2, y: 16},
            {x: 3, y: 12}
          ]

        The color of the bars can also be set per bar as well:

        @@codeblock js
          [
            {x: 0, y: 10, color: hx.color.graph[1]},
            {x: 1, y: 11, color: hx.color.graph[2]},
            {x: 2, y: 16, color: hx.color.graph[3]},
            {x: 3, y: 12, color: hx.color.graph[4]}
          ]

  @method group
    @added 1.0.0
    @description
      Sets the group the series belongs to. Series with the same group will be stacked on top of each other.

    @arg group [String]
      @description
        The class to give the series.

    @returns [LineSeries]
      @description
        This LineSeries

  @method group
    @added 1.0.0
    @description
      Gets the group the series belongs to.

    @returns [String]
      @description
        The group.

  @method fillColor
    @added 1.0.0
    @description
      Sets the color to fill the series with

    @arg color [String]
      @description
        A CSS color string.

    @returns [LineSeries]
      @description
        This LineSeries

  @method fillColor
    @added 1.0.0
    @description
      Gets the color used to fill the series with

    @returns [String]
      @description
        The color as a CSS color string

  @method class
    @added 1.0.0
    @description
      Sets an additional class to give the series svg element.

    @arg class [String]
      @description
        The class to give the series.

    @returns [LineSeries]
      @description
        This LineSeries

  @method class
    @added 1.0.0
    @description
      Gets the additional class applied to the series svg element.

    @returns [String]
      @description
        The additional class applied to the series.

  @method markerRadius
    @added 1.0.0
    @description
      Sets the radius of the markers in pixels

    @arg radius [Number]
      @description
        A CSS color string.

    @returns [LineSeries]
      @description
        This LineSeries

  @method markerRadius
    @added 1.0.0
    @description
      Gets the radius of the markers in pixels

    @returns [Number]
      @description
        The radius of a marker in pixels

  @event click [Object]
    @description
      The event emitted when a series is clicked.

    @property event
      @description
        The click event data.

    @property data
      @description
        The data of the point on the line that was clicked.

    @property series
      @description
        The selected series.

@prototype BandSeries
  @bugfix 0.11.0
    @description
      Fixed issue where existing band series weren't being cleared when a graph was re-renderered.

  @updated 0.11.0
    @description
      Gradient fill is now possible (by using an array for the color property)

  @description
    Used to display a range / interval.

  @property name [String]
    @deprecated 0.15.2
      @description
        Use @code[series.title(name)] to set the series name, @code[series.title()] to get the name.

    @removed 1.0.0
      @description
        Use @code[series.title(name)] to set the series name, @code[series.title()] to get the name.

    @description
      The series name, used by the hover over labels.

  @property color [String]
    @deprecated 0.15.2
      @description
        Use @code[series.fillColor(color)] to set the color, @code[series.fillColor()] to get the color.

    @removed 1.0.0
      @description
        Use @code[series.fillColor(color)] to set the color, @code[series.fillColor()] to get the color.

    @description
      A css string color to fill the band with.

  @property feather [Number]
    @updated 0.11.0
      @description
        series.feather can now be set to false to disable feathering

    @deprecated 0.15.2
      @description
        Use @code[sampleThreshold()] to get the feather value, @code[sampleThreshold(value)] to set it.

    @removed 1.0.0
      @description
        Use @code[series.sampleThreshold()] to get the feather value, @code[series.sampleThreshold(value)] to set it.

    @description
      The maximum number of points in the curve drawn. This is used to reduce the number of points in the svg curve for the series. This property can be set to false to disable feathering. The default is 200.

  @method setData
    @deprecated 0.15.2
      @description
        Use @code[series.data(data)] to set new data, @code[series.data()] to get the current data.

    @removed 1.0.0
      @description
        Use @code[series.data(data)] to set new data, @code[series.data()] to get the current data.

    @description
      Sets the data this series should display.

    @arg data [Data]
      @description
        An array of objects with x, y1 and y2 properties.
        The data should be of the form:
        @@codeblock json
          [
            {x: 0, y1: 10, y2: 16},
            {x: 1, y1: 11, y2: 17},
            {x: 2, y1: 16, y2: 16},
            {x: 3, y1: 12, y2: 14}
          ]

  @extends EventEmitter
  @property color [String/Array]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use @code[series.fillColor(color)] to set the color, @code[series.fillColor()] to get the color.

    @removed 1.0.0
      @description
        Use @code[series.fillColor(color)] to set the color, @code[series.fillColor()] to get the color.

    @description
      A css string color to stroke the path line with.
      To color the line with a gradient, this may be set to an array:
      @@codeblock
        series.series.color = [
          {
            yValue: 0,
            color: hx.theme.plot.negativeCol
          },
          {
            yValue: 90,
            color: '#555'
          },
          {
            yValue: 110,
            color: '#555'
          },
          {
            yValue: 200,
            color: hx.theme.plot.negativeCol
          }
        ]

      The colors will be linearly interpolated vertically between the y values.

  @property class [String]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use @code[series._new_class(class)] to set the title. This method will be renamed to @code[series.class()] in 1.0.0. The _new_ prefix is required to avoid naming clash with existing properties. To get the class use @code[series._new_class()] .

    @removed 1.0.0
      @description
        Use @code[series.class(class)] to set the class, @code[series.class()] to get the class.

    @description
      An optional additional class (or list of space separated classes) to give the series. This can be used to change the styles for a series.

  @method createLabelValues [Function]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use labelValuesExtractor() instead.

    @removed 1.0.0
      @description
        Use labelValuesExtractor() instead.

    @description
      Creates the list of values to show in the hover-over labels. The default is that the x and y values will be returned.

    @arg dataPoint [Object]
      @property x [Number]
        @description
          The x value of the data point

      @property y1 [Number]
        @description
          The top value of the data point band

      @property y2 [Number]
        @description
          The bottom value of the data point band

      @property y [Number]
        @added 0.15.2

    @arg yValueAccessor [Function]
      @description
        Extracts the appropriate y value from the data point - depending on the mouse position.

      @arg dataPoint [Object]
      @returns [Number]
        @description
          The extracted y value.

    @returns [Array[Object]]
      @description
        An array of objects that describe the label values. They should each contain a name, value and formatter property:

      @property name [String]
      @property value [Number]
      @property formatter [Function]
        @arg input [Number]
        @returns String
          @description
            The formatted number.

  @constructor
    @added 0.15.2
    @arg? options [Object]
      @property title [String]
        @description
          The title of the series

        @default
          ''

      @property labelsEnabled [Boolean]
        @description
          Whether labels should be displayed for this series. True if they are enabled, false if disabled

        @default
          true

      @property labelRenderer [Function]
        @description
          The label renderer for this series.

        @arg element [HTMLElement]
          @description
            The container populated

        @arg data [Object]
          @description
            The data provided for rendering the label

      @method labelInterpolated [Boolean]
        @description
          Whether or not label's values should be interpolated. True if the labels are interpolated between data points, false if the labels snap to the closest data point.

        @default
          false

      @property fillColor [String]
        @description
          The color used to fill the series with as a CSS color string.

        @default
          [hx.color(hx.theme.plot.colors[2]).alpha(0.2).toString()]

      @property class [String]
        @description
          The additional class applied to the series svg element.

        @default
          ''

      @property data [Array[Object]]
        @description
          An array of objects with x,y properties. The data should be of the form:

          @@codeblock js
            [
              {x: 0, y: 10},
              {x: 1, y: 11},
              {x: 2, y: 16},
              {x: 3, y: 12}
            ]

          The color of the bars can also be set per bar as well:

          @@codeblock js
            [
              {x: 0, y: 10, color: hx.color.graph[1]},
              {x: 1, y: 11, color: hx.color.graph[2]},
              {x: 2, y: 16, color: hx.color.graph[3]},
              {x: 3, y: 12, color: hx.color.graph[4]}
            ]

      @property sampleThreshold [Number]
        @description
          The maximum number of data points to render when displaying the graph. If there are more data points in the series data than this value, the data will be sampled.

        @default
          200

      @property labelValuesExtractor [Function]
        @description
          The label values extractor that returns the values to display in the label

        @arg series [Series]
          @description
            The Series this label extractor has been applied to

        @arg point [Object]
          @description
            The data point to show label data for

        @arg? xValueLookup [Function]
          @description
            Looks up the x value from the data. May be undefined.

          @returns [Any]

        @arg? yValueLookup [Function]
          @description
            Looks up the y value from the data. May be undefined.

          @returns [Any]

        @returns [Array[Object]]
          @property name [String]
            @description
              The name of the label entry

          @property value [Any]
            @description
              The value of the label entry

          @property formatter [Function]
            @decription
              @description
                A formatter function that can be used to format the value.

            @arg value [Any]
              @description
                The value to format

            @returns String
              @description
                The formatted string

      @property labelFormatters [Object]
        @description
          Optional label formatters for each label value.

          @@codeblock js
            new hx.BandSeries({
              labelFormatters: {
                'x': function(value) { return x },
                'y1': hx.format.si(3),
                'y2': hx.format.si(3)
              }
            })

  @method title
    @added 0.15.2
    @description
      Sets the title of the series

    @arg title [String]
      @description
        The title to give the series - this will appear in the hover labels.

    @returns [BandSeries]
      @description
        This BandSeries

  @method title
    @added 0.15.2
    @description
      Gets the title of the series

    @returns [String]
      @description
        The title of the series

  @method fillColor
    @added 0.15.2
    @description
      Sets the color to fill the band with

    @arg color [String]
      @description
        A CSS color string.

    @returns [BandSeries]
      @description
        This BandSeries

  @method fillColor
    @added 0.15.2
    @description
      Sets the color to fill the band with

    @arg color [Array[Object]]
      @description
        An array of objects which describe a gradient to apply to the band. Colors will be linearly interpolated between the y values specified.

      @property yValue [Number]
        @description
          A y value to apply a color to.

      @property color [String]
        @description
          A CSS color string.

    @returns [BandSeries]
      @description
        This BandSeries

  @method fillColor
    @added 0.15.2
    @description
      Gets the color used to fill the band

    @returns [String]
      @description
        The color as a CSS color string

  @method _new_class
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Sets an additional class to give the series svg element.

    @arg class [String]
      @description
        The class to give the series.

    @returns [BandSeries]
      @description
        This BandSeries

  @method _new_class
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Gets the additional class applied to the series svg element.

    @returns [String]
      @description
        The additional class applied to the series.

  @method sampleThreshold
    @added 0.15.2
    @description
      Sets the maximum number of data points to render when displaying the graph. If there are more data points in the series data than this value, the data will be sampled.

    @arg count [Number]
      @description
        The maximum number of data points to display.

    @returns [BandSeries]
      @description
        This BandSeries

  @method sampleThreshold
    @added 0.15.2
    @description
      Gets the maximum number of points that will be shown before sampling is applied.

    @returns [Number]
      @description
        The sample threshold.

  @method labelValuesExtractor
    @added 0.15.2
    @description
      Sets the label values extractor.

    @arg extractor [Function]
      @description
        Returns the values to display in the label

      @arg series [Series]
        @description
          The Series this label extractor has been applied to

      @arg point [Object]
        @description
          The data point to show label data for

      @arg? xValueLookup [Function]
        @description
          Looks up the x value from the data. May be undefined.

        @returns [Any]

      @arg? yValueLookup [Function]
        @description
          Looks up the y value from the data. May be undefined.

        @returns [Any]

      @returns [Array[Object]]
        @property name [String]
          @description
            The name of the label entry

        @property value [Any]
          @description
            The value of the label entry

        @property formatter [Function]
          @decription
            @description
              A formatter function that can be used to format the value.

          @arg value [Any]
            @description
              The value to format

          @returns String
            @description
              The formatted string

    @returns [BandSeries]
      @description
        This BandSeries

  @method labelFormatter
    @added 0.15.2
    @description
      Sets a label formatter

    @arg name [String]
      @description
        The formatter to set

    @arg formatter [Function]
      @description
        The formatter to use. The formatter converts a value to a string

      @arg value [Any]
      @returns [String]
        @description
          The formatted String

    @returns [BandSeries]
      @description
        This BandSeries

  @method labelFormatter
    @added 0.15.2
    @description
      Gets a label formatter

    @arg name [String]
      @description
        The formatter to get

    @returns [Function]
      @description
        The formatter used for the label component. The formatter converts a value to a string. If there was no formatter set, this will return undefined.

      @arg value [Any]
      @returns String
        @description
          The formatted String

  @method labelValuesExtractor
    @added 0.15.2
    @description
      Gets the label values extractor.

    @returns [Function]
      @description
        Returns the values to display in the label

      @arg series [Series]
        @description
          The Series this label extractor has been applied to

      @arg point [Object]
        @description
          The data point to show label data for

      @arg? xValueLookup [Function]
        @description
          Looks up the x value from the data. May be undefined.

        @returns Any

      @arg? yValueLookup [Function]
        @description
          Looks up the y value from the data. May be undefined.

        @returns Any

      @returns [Array[Object]]
        @property name [String]
          @description
            The name of the label entry

        @property value [Any]
          @description
            The value of the label entry

        @property formatter [Function]
          @decription
            @description
              A formatter function that can be used to format the value.

          @arg value [Any]
            @description
              The value to format

          @returns String
            @description
              The formatted string

  @method labelsEnabled
    @added 0.15.2
    @description
      Sets whether labels should be used for this series

    @arg enabled [Boolean]
      @description
        True to enable, false to disable

    @returns [BandSeries]
      @description
        This BandSeries

  @method labelsEnabled
    @added 0.15.2
    @description
      Gets whether labels should be displayed for this series

    @returns [Boolean]
      @description
        True if they are enabled, false if disabled

  @method labelRenderer
    @added 0.15.2
    @description
      Sets the label renderer for this series. This allows creation of custom labels

    @arg renderer [Function]
      @arg element [HtmlElement]
        @description
          The container to populate

      @arg data [Object]
        @description
          The data available to be used when rendering the label

    @returns [BandSeries]
      @description
        This BandSeries

  @method labelRenderer
    @added 0.15.2
    @description
      Gets the label renderer for this series.

    @returns [Function]
      @arg element [HTMLElement]
        @description
          The container populated

      @arg data [Object]
        @description
          The data provided for rendering the label

  @method labelInterpolated
    @added 0.15.2
    @description
      Sets whether or not label's values should be interpolated.

    @arg interpolate [Boolean]
      @description
        True to interpolate the labels between data points, false to snap to the closest data point.

    @returns [BandSeries]
      @description
        This BandSeries

  @method labelInterpolated
    @added 0.15.2
    @description
      Gets whether or not label's values should be interpolated.

    @returns [Boolean]
      @description
        True if the labels are interpolated between data points, false if the labels snap to the closest data point.

  @method data
    @added 0.15.2
    @description
      Sets the data for this series

    @arg data [Array[Object]]
      @description
        An array of objects with x, y1 and y2 properties.The data should be of the form:

        @@codeblock js
          [
            {x: 0, y1: 10, y2: 16},
            {x: 1, y1: 11, y2: 17},
            {x: 2, y1: 16, y2: 16},
            {x: 3, y1: 12, y2: 14}
          ]

    @returns [BandSeries]
      @description
        This BandSeries

  @method data
    @added 0.15.2
    @description
      Gets the data for this series

    @returns [Array[Object]]
      @description
        An array of objects with x, y1 and y2 properties.The data should be of the form:

        @@codeblock js
          [
            {x: 0, y1: 10, y2: 16},
            {x: 1, y1: 11, y2: 17},
            {x: 2, y1: 16, y2: 16},
            {x: 3, y1: 12, y2: 14}
          ]

  @method class
    @added 1.0.0
    @description
      Sets an additional class to give the series svg element.

    @arg class [String]
      @description
        The class to give the series.

    @returns [BandSeries]
      @description
        This BandSeries

  @method class
    @added 1.0.0
    @description
      Gets the additional class applied to the series svg element.

    @returns [String]
      @description
        The additional class applied to the series.

  @event click [Object]
    @description
      The event emitted when a series is clicked.

    @property event
      @description
        The click event data.

    @property data
      @description
        The data of the point on the band that was clicked.

    @property series
      @description
        The selected series.

@prototype ScatterSeries
  @description
    Displays the data points as dots.

  @property name [String]
    @deprecated 0.15.2
      @description
        Use @code[series.title(name)] to set the series name, @code[series.title()] to get the name.

    @removed 1.0.0
      @description
        Use @code[series.title(name)] to set the series name, @code[series.title()] to get the name.

    @description
      The series name, used by the hover over labels.

  @property color [String]
    @deprecated 0.15.2
      @description
        Use @code[series.fillColor(color)] to set the color, @code[series.fillColor()] to get the color.

    @removed 1.0.0
      @description
        Use @code[series.fillColor(color)] to set the color, @code[series.fillColor()] to get the color.

    @description
      The default colour to use for the points. This can be overridden on a point-by-point basis (see setData).

  @property size [Number]
    @deprecated 0.15.2
      @description
        Use @code[series.radius(size)] to set the size, @code[series.radius()] to get the size.

    @removed 1.0.0
      @description
        Use @code[series.radius(size)] to set the size, @code[series.radius()] to get the size.

    @description
      The radius of the points in pixels. This can be overridden on a point-by-point basis (see setData).

  @method setData
    @deprecated 0.15.2
      @description
        Use @code[series.data(data)] to set new data, @code[series.data()] to get the current data.

    @removed 1.0.0
      @description
        Use @code[series.data(data)] to set new data, @code[series.data()] to get the current data.

    @description
      Sets the data this series should display.

    @arg data [Data]
      @description
        An array of objects with x, y properties.
        The data should be of the form:
        @@codeblock json
          [
            {x: 0, y: 10},
            {x: 1, y: 11},
            {x: 2, y: 16},
            {x: 3, y: 12}
          ]

        The color and size of the points can also be supplied with the data:
        @@codeblock json
          [
            {x: 0, y: 10, color: hx.color.graph[1], size: 1},
            {x: 1, y: 11, color: hx.color.graph[2], size: 2},
            {x: 2, y: 16, color: hx.color.graph[3], size: 3},
            {x: 3, y: 12, color: hx.color.graph[4], size: 4}
          ]

  @extends EventEmitter
  @property class [String]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use @code[series._new_class(class)] to set the title. This method will be renamed to @code[series.class()] in 1.0.0. The _new_ prefix is required to avoid naming clash with existing properties. To get the class use @code[series._new_class()] .

    @removed 1.0.0
      @description
        Use @code[series.class(class)] to set the series class, @code[series.class()] to get the class.

    @description
      An optional additional class (or list of space separated classes) to give the series. This can be used to change the styles for the data points.

  @method createLabelValues [Function]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use labelValuesExtractor() instead.

    @removed 1.0.0
      @description
        Use labelValuesExtractor() instead.

    @description
      Creates the list of values to show in the hover-over labels. The default is that the x and y values will be returned.

    @arg dataPoint [Object]
      @property x [Number]
        @description
          The x value of the data point

      @property y [Number]
        @description
          The y value of the data point

    @returns [Array[Object]]
      @description
        An array of objects that describe the label values. They should each contain a name, value and formatter property:

      @property name [String]
      @property value [Number]
      @property formatter [Function]
        @arg input [Number]
        @returns String
          @description
            The formatted number.

  @constructor
    @added 0.15.2
    @arg? options [Object]
      @property title [String]
        @description
          The title of the series

        @default
          ''

      @property labelsEnabled [Boolean]
        @description
          Whether labels should be displayed for this series. True if they are enabled, false if disabled

        @default
          true

      @property labelRenderer [Function]
        @description
          The label renderer for this series.

        @arg element [HTMLElement]
          @description
            The container populated

        @arg data [Object]
          @description
            The data provided for rendering the label

      @property fillColor [String]
        @description
          The color used to fill the series with as a CSS color string.

        @default
          [hx.theme.plot.colors[3]]

      @property class [String]
        @description
          The additional class applied to the series svg element.

        @default
          ''

      @property radius [Number]
        @description
          The radius of the scatter points for this series. The radius may also be overidden in the data.

        @default
          2

      @property data [Array[Object]]
        @description
          An array of objects with x, y1 and y2 properties.The data should be of the form:

          @@codeblock js
            [
              {x: 0, y1: 10, y2: 16},
              {x: 1, y1: 11, y2: 17},
              {x: 2, y1: 16, y2: 16},
              {x: 3, y1: 12, y2: 14}
            ]

      @property labelValuesExtractor [Function]
        @description
          The label values extractor that returns the values to display in the label

        @arg series [Series]
          @description
            The Series this label extractor has been applied to

        @arg point [Object]
          @description
            The data point to show label data for

        @arg? xValueLookup [Function]
          @description
            Looks up the x value from the data. May be undefined.

          @returns [Any]

        @arg? yValueLookup [Function]
          @description
            Looks up the y value from the data. May be undefined.

          @returns [Any]

        @returns [Array[Object]]
          @property name [String]
            @description
              The name of the label entry

          @property value [Any]
            @description
              The value of the label entry

          @property formatter [Function]
            @decription
              @description
                A formatter function that can be used to format the value.

            @arg value [Any]
              @description
                The value to format

            @returns String
              @description
                The formatted string

      @property labelFormatters [Object]
        @description
          Optional label formatters for each label value.

          @@codeblock js
            new hx.ScatterSeries({
              labelFormatters: {
                'x': function(value) { return x },
                'y': hx.format.si(3)
              }
            })

  @method labelValuesExtractor
    @added 0.15.2
    @description
      Sets the label values extractor.

    @arg extractor [Function]
      @description
        Returns the values to display in the label

      @arg series [Series]
        @description
          The Series this label extractor has been applied to

      @arg point [Object]
        @description
          The data point to show label data for

      @arg? xValueLookup [Function]
        @description
          Looks up the x value from the data. May be undefined.

        @returns [Any]

      @arg? yValueLookup [Function]
        @description
          Looks up the y value from the data. May be undefined.

        @returns [Any]

      @returns [Array[Object]]
        @property name [String]
          @description
            The name of the label entry

        @property value [Any]
          @description
            The value of the label entry

        @property formatter [Function]
          @decription
            @description
              A formatter function that can be used to format the value.

          @arg value [Any]
            @description
              The value to format

          @returns String
            @description
              The formatted string

    @returns [ScatterSeries]
      @description
        This ScatterSeries

  @method labelValuesExtractor
    @added 0.15.2
    @description
      Gets the label values extractor.

    @returns [Function]
      @description
        Returns the values to display in the label

      @arg series [Series]
        @description
          The Series this label extractor has been applied to

      @arg point [Object]
        @description
          The data point to show label data for

      @arg? xValueLookup [Function]
        @description
          Looks up the x value from the data. May be undefined.

        @returns Any

      @arg? yValueLookup [Function]
        @description
          Looks up the y value from the data. May be undefined.

        @returns Any

      @returns [Array[Object]]
        @property name [String]
          @description
            The name of the label entry

        @property value [Any]
          @description
            The value of the label entry

        @property formatter [Function]
          @decription
            @description
              A formatter function that can be used to format the value.

          @arg value [Any]
            @description
              The value to format

          @returns String
            @description
              The formatted string

  @method labelFormatter
    @added 0.15.2
    @description
      Sets a label formatter

    @arg name [String]
      @description
        The formatter to set

    @arg formatter [Function]
      @description
        The formatter to use. The formatter converts a value to a string

      @arg value [Any]
      @returns [String]
        @description
          The formatted String

    @returns [ScatterSeries]
      @description
        This ScatterSeries

  @method labelFormatter
    @added 0.15.2
    @description
      Gets a label formatter

    @arg name [String]
      @description
        The formatter to get

    @returns [Function]
      @description
        The formatter used for the label component. The formatter converts a value to a string. If there was no formatter set, this will return undefined.

      @arg value [Any]
      @returns String
        @description
          The formatted String

  @method labelsEnabled
    @added 0.15.2
    @description
      Sets whether labels should be used for this series

    @arg enabled [Boolean]
      @description
        True to enable, false to disable

    @returns [ScatterSeries]
      @description
        This ScatterSeries

  @method labelsEnabled
    @added 0.15.2
    @description
      Gets whether labels should be displayed for this series

    @returns [Boolean]
      @description
        True if they are enabled, false if disabled

  @method labelRenderer
    @added 0.15.2
    @description
      Sets the label renderer for this series. This allows creation of custom labels

    @arg renderer [Function]
      @arg element [HtmlElement]
        @description
          The container to populate

      @arg data [Object]
        @description
          The data available to be used when rendering the label

    @returns [ScatterSeries]
      @description
        This ScatterSeries

  @method labelRenderer
    @added 0.15.2
    @description
      Gets the label renderer for this series.

    @returns [Function]
      @arg element [HTMLElement]
        @description
          The container populated

      @arg data [Object]
        @description
          The data provided for rendering the label

  @method title
    @added 0.15.2
    @description
      Sets the title of the series

    @arg title [String]
      @description
        The title to give the series - this will appear in the hover labels.

    @returns [ScatterSeries]
      @description
        This ScatterSeries

  @method title
    @added 0.15.2
    @description
      Gets the title of the series

    @returns [String]
      @description
        The title of the series

  @method _new_class
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Sets an additional class to give the series svg elements.

    @arg class [String]
      @description
        The class to give the series.

    @returns [ScatterSeries]
      @description
        This ScatterSeries

  @method _new_class
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Gets the additional class applied to the series svg elements.

    @returns [String]
      @description
        The additional class applied to the series.

  @method radius
    @added 0.15.2
    @description
      Sets the radius of the scatter points for this series. The radius may also be overidden in the data.

    @arg radius [Number]
      @description
        The radius of the points in pixels.

    @returns [ScatterSeries]
      @description
        This ScatterSeries

  @method radius
    @added 0.15.2
    @description
      Gets the radius of the scatter points.

    @returns [Number]
      @description
        The radius in pixels.

  @method fillColor
    @added 0.15.2
    @description
      Sets the color to fill the point with

    @arg color [String]
      @description
        A CSS color string.

    @returns [ScatterSeries]
      @description
        This ScatterSeries

  @method fillColor
    @added 0.15.2
    @description
      Gets the color used to fill the point

    @returns [String]
      @description
        The color as a CSS color string

  @method data
    @added 0.15.2
    @description
      Sets the data for this series

    @arg data [Array[Object]]
      @description
        An array of objects with x, y properties. The data should be of the form:

        @@codeblock js
          [
            {x: 0, y: 10},
            {x: 1, y: 11},
            {x: 2, y: 16},
            {x: 3, y: 12}
          ]

        The color and size of the points can also be supplied with the data:

        @@codeblock js
          [
            {x: 0, y: 10, fillColor: hx.color.graph[1], radius: 1},
            {x: 1, y: 11, fillColor: hx.color.graph[2], radius: 2},
            {x: 2, y: 16, fillColor: hx.color.graph[3], radius: 3},
            {x: 3, y: 12, fillColor: hx.color.graph[4], radius: 4}
          ]

    @returns [ScatterSeries]
      @description
        This ScatterSeries

  @method data
    @added 0.15.2
    @description
      Gets the data for this series

    @returns [Array[Object]]
      @description
        An array of objects with x, y properties. The data should be of the form:

        @@codeblock js
          [
            {x: 0, y: 10},
            {x: 1, y: 11},
            {x: 2, y: 16},
            {x: 3, y: 12}
          ]

        The color and size of the points can also be supplied with the data:

        @@codeblock js
          [
            {x: 0, y: 10, fillColor: hx.color.graph[1], radius: 1},
            {x: 1, y: 11, fillColor: hx.color.graph[2], radius: 2},
            {x: 2, y: 16, fillColor: hx.color.graph[3], radius: 3},
            {x: 3, y: 12, fillColor: hx.color.graph[4], radius: 4}
          ]

  @method class
    @added 1.0.0
    @description
      Sets an additional class to give the series svg elements.

    @arg class [String]
      @description
        The class to give the series.

    @returns [ScatterSeries]
      @description
        This ScatterSeries

  @method class
    @added 1.0.0
    @description
      Gets the additional class applied to the series svg elements.

    @returns [String]
      @description
        The additional class applied to the series.

  @event click [Object]
    @description
      The event emitted when a series is clicked.

    @property event
      @description
        The click event data.

    @property data
      @description
        The data of the point on the graph that was clicked.

    @property series
      @description
        The selected series.

@prototype StraightLineSeries
  @description
    A Straight line series, that just requires a point that it passes through, and a gradient. This series type is useful for drawing things like lines of best fit.

  @property color [String]
    @deprecated 0.15.2
      @description
        Use @code[series.strokeColor(color)] to set the color, @code[series.strokeColor()] to get the color.

    @removed 1.0.0
      @description
        Use @code[series.strokeColor(color)] to set the color, @code[series.strokeColor()] to get the color.

    @description
      A css string color to stroke the path line with.

  @method setData
    @deprecated 0.15.2
      @description
        Use @code[series.data(data)] to set new data, @code[series.data()] to get the current data.

    @removed 1.0.0
      @description
        Use @code[series.data(data)] to set new data, @code[series.data()] to get the current data.

    @description
      Sets the data this series should display.

    @arg data [Data]
      @description
        An object describing the line to draw.
        The data should be of the form:
        A line with a gradient:
        @@codeblock json
          {x: 0, y: 10, dx: 2, dy: 3}

        Vertical line:
        @@codeblock json
          {x: 50}

        Horizontal line:
        @@codeblock json
          {y: 70}

  @extends EventEmitter
  @property class [String]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use @code[series._new_class(class)] to set the title. This method will be renamed to @code[series.class()] in 1.0.0. The _new_ prefix is required to avoid naming clash with existing properties. To get the class use @code[series._new_class()] .

    @removed 1.0.0
      @description
        Use @code[series.class(class)] to set the series class, @code[series.class()] to get the class.

    @description
      An optional additional class (or list of space separated classes) to give the series. This can be used to change the styles for a series, for example by making a line series dashed.

  @method createLabelValues [Function]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use labelValuesExtractor() instead.

    @removed 1.0.0
      @description
        Use labelValuesExtractor() instead.

    @description
      Creates the list of values to show in the hover-over labels. The default is that the x and y values will be returned.

    @arg dataPoint [Object]
      @property x [Number]
        @description
          The x value of the data point

      @property y [Number]
        @description
          The y value of the data point

    @returns [Array[Object]]
      @description
        An array of objects that describe the label values. They should each contain a name, value and formatter property:

      @property name [String]
      @property value [Number]
      @property formatter [Function]
        @arg input [Number]
        @returns String
          @description
            The formatted number.

  @constructor
    @added 0.15.2
    @arg? options [Object]
      @property title [String]
        @description
          The title of the series

      @property labelsEnabled [Boolean]
        @description
          Whether labels should be displayed for this series. True if they are enabled, false if disabled

        @default
          true

      @property labelRenderer [Function]
        @description
          The label renderer for this series.

        @arg element [HTMLElement]
          @description
            The container populated

        @arg data [Object]
          @description
            The data provided for rendering the label

      @property strokeColor [String]
        @description
          The color used to stroke the series with as a CSS color string.

        @default
          [hx.theme.plot.colors[4]]

      @property class [String]
        @description
          The additional class applied to the series svg element.

        @default
          ''

      @property data [Array[Object]]
        @description
          An array of objects with x, y properties. The data should be of the form:

          @@codeblock js
            [
              {x: 0, y: 10},
              {x: 1, y: 11},
              {x: 2, y: 16},
              {x: 3, y: 12}
            ]

          The color and size of the points can also be supplied with the data:

          @@codeblock js
            [
              {x: 0, y: 10, fillColor: hx.color.graph[1], radius: 1},
              {x: 1, y: 11, fillColor: hx.color.graph[2], radius: 2},
              {x: 2, y: 16, fillColor: hx.color.graph[3], radius: 3},
              {x: 3, y: 12, fillColor: hx.color.graph[4], radius: 4}
            ]

      @property labelValuesExtractor [Function]
        @description
          The label values extractor that returns the values to display in the label

        @arg series [Series]
          @description
            The Series this label extractor has been applied to

        @arg point [Object]
          @description
            The data point to show label data for

        @arg? xValueLookup [Function]
          @description
            Looks up the x value from the data. May be undefined.

          @returns [Any]

        @arg? yValueLookup [Function]
          @description
            Looks up the y value from the data. May be undefined.

          @returns [Any]

        @returns [Array[Object]]
          @property name [String]
            @description
              The name of the label entry

          @property value [Any]
            @description
              The value of the label entry

          @property formatter [Function]
            @decription
              @description
                A formatter function that can be used to format the value.

            @arg value [Any]
              @description
                The value to format

            @returns String
              @description
                The formatted string

      @property labelFormatters [Object]
        @description
          Optional label formatters for each label value.

          @@codeblock js
            new hx.StraightLineSeries({
              labelFormatters: {
                'x': function(value) { return x },
                'y': hx.format.si(3)
              }
            })

  @method labelValuesExtractor
    @added 0.15.2
    @description
      Sets the label values extractor.

    @arg extractor [Function]
      @description
        Returns the values to display in the label

      @arg series [Series]
        @description
          The Series this label extractor has been applied to

      @arg point [Object]
        @description
          The data point to show label data for

      @arg? xValueLookup [Function]
        @description
          Looks up the x value from the data. May be undefined.

        @returns [Any]

      @arg? yValueLookup [Function]
        @description
          Looks up the y value from the data. May be undefined.

        @returns [Any]

      @returns [Array[Object]]
        @property name [String]
          @description
            The name of the label entry

        @property value [Any]
          @description
            The value of the label entry

        @property formatter [Function]
          @decription
            @description
              A formatter function that can be used to format the value.

          @arg value [Any]
            @description
              The value to format

          @returns String
            @description
              The formatted string

    @returns [StraightLineSeries]
      @description
        This StraightLineSeries

  @method labelValuesExtractor
    @added 0.15.2
    @description
      Gets the label values extractor.

    @returns [Function]
      @description
        Returns the values to display in the label

      @arg series [Series]
        @description
          The Series this label extractor has been applied to

      @arg point [Object]
        @description
          The data point to show label data for

      @arg? xValueLookup [Function]
        @description
          Looks up the x value from the data. May be undefined.

        @returns Any

      @arg? yValueLookup [Function]
        @description
          Looks up the y value from the data. May be undefined.

        @returns Any

      @returns [Array[Object]]
        @property name [String]
          @description
            The name of the label entry

        @property value [Any]
          @description
            The value of the label entry

        @property formatter [Function]
          @decription
            @description
              A formatter function that can be used to format the value.

          @arg value [Any]
            @description
              The value to format

          @returns String
            @description
              The formatted string

  @method labelFormatter
    @added 0.15.2
    @description
      Sets a label formatter

    @arg name [String]
      @description
        The formatter to set

    @arg formatter [Function]
      @description
        The formatter to use. The formatter converts a value to a string

      @arg value [Any]
      @returns [String]
        @description
          The formatted String

    @returns [StraightLineSeries]
      @description
        This StraightLineSeries

  @method labelFormatter
    @added 0.15.2
    @description
      Gets a label formatter

    @arg name [String]
      @description
        The formatter to get

    @returns [Function]
      @description
        The formatter used for the label component. The formatter converts a value to a string. If there was no formatter set, this will return undefined.

      @arg value [Any]
      @returns String
        @description
          The formatted String

  @method labelsEnabled
    @added 0.15.2
    @description
      Sets whether labels should be used for this series

    @arg enabled [Boolean]
      @description
        True to enable, false to disable

    @returns [StraightLineSeries]
      @description
        This StraightLineSeries

  @method labelsEnabled
    @added 0.15.2
    @description
      Gets whether labels should be displayed for this series

    @returns [Boolean]
      @description
        True if they are enabled, false if disabled

  @method labelRenderer
    @added 0.15.2
    @description
      Sets the label renderer for this series. This allows creation of custom labels

    @arg renderer [Function]
      @arg element [HtmlElement]
        @description
          The container to populate

      @arg data [Object]
        @description
          The data available to be used when rendering the label

    @returns [StraightLineSeries]
      @description
        This StraightLineSeries

  @method labelRenderer
    @added 0.15.2
    @description
      Gets the label renderer for this series.

    @returns [Function]
      @arg element [HTMLElement]
        @description
          The container populated

      @arg data [Object]
        @description
          The data provided for rendering the label

  @property name [String]
    @added 0.15.2
    @deprecated 0.15.2
      @description
        Use @code[series.title(name)] to set the series name, @code[series.title()] to get the name.

    @removed 1.0.0
      @description
        Use @code[series.title(name)] to set the series name, @code[series.title()] to get the name.

  @method title
    @added 0.15.2
    @description
      Sets the title of the series

    @arg title [String]
      @description
        The title to give the series - this will appear in the hover labels.

    @returns [StraightLineSeries]
      @description
        This StraightLineSeries

  @method title
    @added 0.15.2
    @description
      Gets the title of the series

    @returns [String]
      @description
        The title of the series

  @method _new_class
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Sets an additional class to give the series svg element.

    @arg class [String]
      @description
        The class to give the series.

    @returns [StraightLineSeries]
      @description
        This StraightLineSeries

  @method _new_class
    @added 0.15.2
    @removed 1.0.0
    @description
      @notice Note
        The _new_ prefix will be dropped in version 1.0.0.

      Gets the additional class applied to the series svg element.

    @returns [String]
      @description
        The additional class applied to the series.

  @method strokeColor
    @added 0.15.2
    @description
      Sets the color to stroke the series with

    @arg color [String]
      @description
        A CSS color string.

    @returns [StraightLineSeries]
      @description
        This StraightLineSeries

  @method strokeColor
    @added 0.15.2
    @description
      Gets the color used to stroke the series with

    @returns [String]
      @description
        The color as a CSS color string

  @method data
    @added 0.15.2
    @description
      Sets the data for this series

    @arg data [Array[Object]]
      @description
        An object describing the line to draw. The data should be of the form:

        A line with a gradient:

        @@codeblock js
          {x: 0, y: 10, dx: 2, dy: 3}

        Vertical line:

        @@codeblock js
          {x: 50}

        Horizontal line:

        @@codeblock js
          {y: 70}

    @returns [StraightLineSeries]
      @description
        This StraightLineSeries

  @method data
    @added 0.15.2
    @description
      Gets the data for this series

    @returns [Array[Object]]
      @description
        An object describing the line to draw. The data should be of the form:

        A line with a gradient:

        @@codeblock js
          {x: 0, y: 10, dx: 2, dy: 3}

        Vertical line:

        @@codeblock js
          {x: 50}

        Horizontal line:

        @@codeblock js
          {y: 70}

  @method class
    @added 1.0.0
    @description
      Sets an additional class to give the series svg element.

    @arg class [String]
      @description
        The class to give the series.

    @returns [StraightLineSeries]
      @description
        This StraightLineSeries

  @method class
    @added 1.0.0
    @description
      Gets the additional class applied to the series svg element.

    @returns [String]
      @description
        The additional class applied to the series.

  @event click [Object]
    @description
      The event emitted when a series is clicked.

    @property event
      @description
        The click event data.

    @property data
      @description
        The data of the point on the line that was clicked.

    @property series
      @description
        The selected series.

@prototype hx.PieChart
  @updated 0.11.0
    @description
      Added resize listener to make pie charts re-render when the container is resized.

  @bugfix 0.11.0
    @description
      Updated the pie chart labels to help prevent them flowing outside the bounding box of the svg.

  @bugfix 1.5.0
    @description
      Resolved an issue in pie charts where the legend was not being displayed with the correct colors and was not rendering correctly

  @bugfix 1.14.0
    @issue 428
    @description
      Fixed a divide by zero issue which caused single segment pie charts not to be rendered

  @description
    Type for displaying pie and donut charts.

  @constructor
    @removed 0.15.2
      @description
        A new constructor has been added with an optional options object in place of this. If not using the options object, the existing way of creating a graph with @code[new hx.PieChart(selector)] will still work

    @description
      Creates a new pie chart object.

    @arg selector [HTMLElement/String]
      @description
        An HTMLElement or CSS selector which specifies the chart's container.

  @property segmentPadding [Number]
    @deprecated 0.15.2
      @description
        Use piechart._new_segmentPadding(value) to set, piechart._new_segmentPadding() to get.

    @removed 1.0.0
      @description
        Use piechart.segmentPadding(value) to set, piechart.segmentPadding() to get.

    @description
      The spacing between the segments. This value is a ratio of the segment width, so that pie charts scale to any size well. The default is 0.

  @property innerPadding [Number]
    @deprecated 0.15.2
      @description
        Use piechart._new_innerPadding(value) to set, piechart._new_innerPadding() to get.

    @removed 1.0.0
      @description
        Use piechart.innerPadding(value) to set, piechart.innerPadding() to get.

    @description
      The padding at the centre of the pie chart. This can turn a pie chart into a donut chart. This value should be between 0 and 1. A value around 0.5 is good for donut charts. The default is 0.

  @property ringPadding [Number]
    @deprecated 0.15.2
      @description
        Use piechart._new_ringPadding(value) to set, piechart._new_ringPadding() to get.

    @removed 1.0.0
      @description
        Use piechart.ringPadding(value) to set, piechart.ringPadding() to get.

    @description
      The separation between rings when there are multiple rings. This should be a value between 0 and 1. The default is 0.1.

  @property totalAngle [Number]
    @deprecated 0.15.2
      @description
        Use piechart._new_totalAngle(value) to set, piechart._new_totalAngle() to get.

    @removed 1.0.0
      @description
        Use piechart.totalAngle(value) to set, piechart.totalAngle() to get.

    @description
      The total angle the pie chart should use in radians - the default is 2*Math.PI. This can be used to create semi-circle donut charts.

  @property startAngle [Number]
    @deprecated 0.15.2
      @description
        Use piechart._new_startAngle(value) to set, piechart._new_startAngle() to get.

    @removed 1.0.0
      @description
        Use piechart.startAngle(value) to set, piechart.startAngle() to get.

    @description
      The angle that the segments should drawing from in radians. The default is 0, which starts the drawing from 12 o'clock. For drawing a semi-circle donut chart, this could be changed to -Math.PI/2.

  @property color [String]
    @deprecated 0.15.2
      @description
        Use piechart.strokeColor(value) to set, piechart.strokeColor() to get.

    @removed 1.0.0
      @description
        Use piechart.strokeColor(value) to set, piechart.strokeColor() to get.

    @description
      A CSS color string which supplies the default color for ring segments. This can be overridden for each segment when supplying the data.

  @property formatter [Formatter]
    @deprecated 0.15.2
      @description
        Use piechart.labelFormatter(value) to set, piechart.labelFormatter() to get.

    @removed 1.0.0
      @description
        Use piechart.labelFormatter(value) to set, piechart.labelFormatter() to get.

    @description
      Formatter to use when displaying the value of the segment. The default is hx.format.si(2), which uses SI notation for numbers, and passes strings through untouched.

  @method setData
    @deprecated 0.15.2
      @description
        Use piechart.data(data) to set, piechart.data() to get.

    @removed 1.0.0
      @description
        Use piechart.data(data) to set, piechart.data() to get.

    @description
      Sets the data this pie chart should display.

    @arg data [Data]
      @description
        The data that describes the pie chart.
        The data should be of the form:
        @@codeblock js
          {
            name: "Pie Chart"
            segments: [
              {
                name: "Segment 1"
                size: 10,
                color: hx.cycle(hx.color.graph, 0)
              },
              {
                name: "Segment 2"
                size: 10,
                color: hx.cycle(hx.color.graph, 1)
              },
              {
                name: "Segment 3"
                size: 80,
                color: hx.cycle(hx.color.graph, 2)
              }
            ]
          }

        For multi-ring pie charts, an array of the above object is expected:
        @@codeblock js
          [
            {
              name: "Series 1"
              segments: [
                {
                  name: "Segment 1",
                  size: 10,
                  color: hx.cycle(hx.color.graph, 0)
                },
                {
                  name: "Segment 2",
                  size: 10,
                  color: hx.cycle(hx.color.graph, 1)
                },
                {
                  name: "Segment 3",
                  size: 80,
                  color: hx.cycle(hx.color.graph, 2)
                }
              ]
            },
            {
              name: "Series 2"
              segments: [
                {
                  name: "Segment 1",
                  size: 90,
                  color: hx.cycle(hx.color.graph, 3)
                },
                {
                  name: "Segment 2",
                  size: 20,
                  color: hx.cycle(hx.color.graph, 4)
                },
                {
                  name: "Segment 3",
                  size: 30,
                  color: hx.cycle(hx.color.graph, 5)
                }
              ]
            },
            {
              name: "Series 3"
              segments: [
                {
                  name: "Segment 1",
                  size: 90,
                  color: hx.cycle(hx.color.graph, 6)
                },
                {
                  name: "Segment 2",
                  size: 20,
                  color: hx.cycle(hx.color.graph, 7)
                },
                {
                  name: "Segment 3",
                  size: 30,
                  color: hx.cycle(hx.color.graph, 8)
                }
              ]
            }
          ]

  @method render
    @description
      Redraws the chart.

  @method createLabelValues [Function]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use piechart.labelValuesExtractor(value) to set, piechart.labelValuesExtractor() to get.

    @removed 1.0.0
      @description
        Use piechart.labelValuesExtractor(value) to set, piechart.labelValuesExtractor() to get.

    @description
      Creates the list of values to show in the hover-over labels. The default is that the x and y values will be returned.

    @arg segment [Object]
      @description
        An object containing information for the segment being hovered over

    @arg ring [Object]
      @description
        An object containing information for the ring that is being hovered over

    @returns [Array[Object]]
      @description
        An array of objects that describe the label values. They should each contain a name, value and formatter property:

      @property name [String]
      @property value [Number]
      @property formatter [Function]
        @arg input [Number]
        @returns String
          @description
            The formatted number.

  @property useLabels [Boolean]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use piechart.labelsEnabled(value) to set, piechart.labelsEnabled() to get.

    @removed 1.0.0
      @description
        Use piechart.labelsEnabled(value) to set, piechart.labelsEnabled() to get.

    @description
      Whether or not to display labels on hover

    @default
      true

  @property useSegmentText [Boolean]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use piechart.segmentTextEnabled(value) to set, piechart.segmentTextEnabled() to get.

    @removed 1.0.0
      @description
        Use piechart.segmentTextEnabled(value) to set, piechart.segmentTextEnabled() to get.

    @description
      Whether or not to display text on each segment. If this is enabled, it is recommended that useLabels is disabled.

    @default
      false

  @property segmentTextFormatter [Function]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use piechart._new_segmentTextFormatter(value) to set, piechart._new_segmentTextFormatter() to get.

    @removed 1.0.0
      @description
        Use piechart.segmentTextFormatter(value) to set, piechart.segmentTextFormatter() to get.

    @description
      Returns the text that should be displayed on a segment if useSegmentText is enabled.

    @arg segment [Object]
      @description
        The segment to return text for

    @arg segments [Array[Object]]
      @description
        The array of all segments in the ring

    @returns [String]
      @description
        The formatted text.

  @property useLegend [Boolean]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use piechart.legendEnabled(value) to set, piechart.legendEnabled() to get.

    @removed 1.0.0
      @description
        Use piechart.legendEnabled(value) to set, piechart.legendEnabled() to get.

    @description
      Whether or not to display the legend

    @default
      false

  @property legendPosition [String]
    @added 0.11.0
    @deprecated 0.15.2
      @description
        Use piechart.legendLocation(value) to set, piechart.legendLocation() to get.

    @removed 1.0.0
      @description
        Use piechart.legendLocation(value) to set, piechart.legendLocation() to get.

    @description
      How to display the legend on the graph. Possible modes:

      @list
        @item['auto' - moves the legend around to avoid the mouse]
        @item['hover' - same as auto, but only displays the legend on mouse hover]
        @item['top-right' - displays the legend in the top right]
        @item['top-left' - displays the legend in the top left]
        @item['bottom-right' - displays the legend in the bottom right]
        @item['bottom-left' - displays the legend in the bottom left]

    @default
      auto

  @constructor
    @added 0.15.2
    @description
      Creates a new pie chart object.

    @arg selector [String/HTMLElement/Selection]
      @description
        An HTMLElement or CSS selector which selects the graph's container.

    @arg? options [Object]
      @property labelsEnabled [Boolean]
        @description
          Whether labels should be displayed for this series. True if they are enabled, false if disabled

        @default
          true

      @property labelRenderer [Function]
        @description
          The label renderer for this series.

        @arg element [HTMLElement]
          @description
            The container populated

        @arg data [Object]
          @description
            The data provided for rendering the label

      @property labelFormatter [Function]
        @description
          The label formatter for this series.

        @arg value [Number/String]
          @description
            The value point to format

        @returns [Number/String]
          @description
            The formatted value point

        @default
          hx.format.si(2)

      @property fillColor [String]
        @description
          The color used to fill the series with as a CSS color string.

        @default
          [hx.theme.plot.colors[1]]

      @property segmentPadding [Number]
        @description
          The spacing between the segments. This value is a ratio of the segment width, so that pie charts scale to any size well.

        @default
          0

      @property innerPadding [Number]
        @description
          The padding at the centre of the pie chart. This can turn a pie chart into a donut chart. This value should be between 0 and 1. A value around 0.5 is good for donut charts.

        @default
          0

      @property ringPadding [Number]
        @description
          The separation between rings when there are multiple rings. This should be a value between 0 and 1.

        @default
          0.1

      @property totalAngle [Number]
        @description
          The total angle the pie chart should use in radians - the default is 2*Math.PI. This can be used to create semi-circle donut charts.

        @default
          2*Math.PI

      @property startAngle [Number]
        @description
          The angle that the segments should drawing from in radians. The default is 0, which starts the drawing from 12 o'clock. For drawing a semi-circle donut chart, this could be changed to -Math.PI/2.

        @default
          0

      @property legendEnabled [Boolean]
        @description
          Enables or disables the legends. Supplying true enables zoom, false disables it.

        @default
          true

      @property legendLocation [String]
        @description
          How to display the legend on the pie chart. Possible modes:

          @list
            @item['auto' - moves the legend around to avoid the mouse]
            @item['hover' - same as auto, but only displays the legend on mouse hover]
            @item['top-right' - displays the legend in the top right]
            @item['top-left' - displays the legend in the top left]
            @item['bottom-right' - displays the legend in the bottom right]
            @item['bottom-left' - displays the legend in the bottom left]

        @default
          "auto"

      @property segmentTextEnabled [Boolean]
        @description
          Whether or not to display text on each segment. If this is enabled, it is recommended that useLabels is disabled.

        @default
          false

      @property segmentTextFormatter [Function]
        @description
          Returns the text that should be displayed on a segment if useSegmentText is enabled.

        @arg segment [Object]
          @description
            The segment to return text for

        @arg segments [Array[Object]]
          @description
            The array of all segments in the ring

        @returns [String]
          @description
            The formatted text.

      @property labelValuesExtractor [Function]
        @description
          The label values extractor that returns the values to display in the label

        @arg segment [Object]
          @description
            The current segment to show label data for

        @arg ring [Object]
          @description
            The current ring this label extractor has been applied to

        @arg pie [PieChart]
          @description
            The current pie chart

        @returns [Array[Object]]
          @property name [String]
            @description
              The name of the label entry

          @property value [Any]
            @description
              The value of the label entry

          @property formatter [Function]
            @decription
              @description
                A formatter function that can be used to format the value.

            @arg value [Any]
              @description
                The value to format

            @returns String
              @description
                The formatted string

  @method segmentTextEnabled
    @added 0.15.2
    @description
      Sets the segmentTextEnabled value of the pie chart

    @arg value [Boolean]
      @description
        Whether the segment text should be enabled

    @returns [PieChart]
      @description
        This PieChart

  @method segmentTextEnabled
    @added 0.15.2
    @description
      Gets the current segmentTextEnabled of the pie chart

    @returns [Boolean]
      @description
        Whether the segment text is enabled

  @method labelsEnabled
    @added 0.15.2
    @description
      Sets the labelsEnabled value of the pie chart

    @arg value [Boolean]
      @description
        Whether the labels should be enabled

    @returns [PieChart]
      @description
        This PieChart

  @method labelsEnabled
    @added 0.15.2
    @description
      Gets the current labelsEnabled of the pie chart

    @returns [Boolean]
      @description
        Whether the labels are enabled

  @method legendEnabled
    @added 0.15.2
    @description
      Sets the legendEnabled value of the pie chart

    @arg value [Boolean]
      @description
        Whether the legend should be enabled

    @returns [PieChart]
      @description
        This PieChart

  @method legendEnabled
    @added 0.15.2
    @description
      Gets the current legendEnabled of the pie chart

    @returns [Boolean]
      @description
        Whether the legend is enabled

  @method fillColor
    @added 0.15.2
    @description
      Sets the default segment fill color value of the pie chart

    @arg value [String]
      @description
        The default segment fill color

    @returns [PieChart]
      @description
        This PieChart

  @method fillColor
    @added 0.15.2
    @description
      Gets the current default segment fill color of the pie chart

    @returns [String]
      @description
        The default segment fill color

  @method _new_innerPadding
    @added 0.15.2
    @removed 1.0.0
    @description
      Sets the inner padding of the pie chart

    @arg value [Number]
      @description
        The inner padding to set

    @returns [PieChart]
      @description
        This PieChart

  @method _new_innerPadding
    @added 0.15.2
    @removed 1.0.0
    @description
      Gets the current inner padding of the pie chart

    @returns [Number]
      @description
        The current inner padding

  @method _new_segmentPadding
    @added 0.15.2
    @removed 1.0.0
    @description
      Sets the segment padding of the pie chart

    @arg value [Number]
      @description
        The segment padding to set

    @returns [PieChart]
      @description
        This PieChart

  @method _new_segmentPadding
    @added 0.15.2
    @removed 1.0.0
    @description
      Gets the current segment padding of the pie chart

    @returns [Number]
      @description
        The current segment padding

  @method _new_ringPadding
    @added 0.15.2
    @removed 1.0.0
    @description
      Sets the ring padding of the pie chart

    @arg value [Number]
      @description
        The ring padding to set

    @returns [PieChart]
      @description
        This PieChart

  @method _new_ringPadding
    @added 0.15.2
    @removed 1.0.0
    @description
      Gets the current ring padding of the pie chart

    @returns [Number]
      @description
        The current ring padding

  @method _new_totalAngle
    @added 0.15.2
    @removed 1.0.0
    @description
      Sets the total angle of the pie chart

    @arg value [Number]
      @description
        The total angle to set

    @returns [PieChart]
      @description
        This PieChart

  @method _new_totalAngle
    @added 0.15.2
    @removed 1.0.0
    @description
      Gets the current total angle of the pie chart

    @returns [Number]
      @description
        The current total angle

  @method _new_startAngle
    @added 0.15.2
    @removed 1.0.0
    @description
      Sets the start angle of the pie chart

    @arg value [Number]
      @description
        The start angle to set

    @returns [PieChart]
      @description
        This PieChart

  @method _new_startAngle
    @added 0.15.2
    @removed 1.0.0
    @description
      Gets the current start angle of the pie chart

    @returns [Number]
      @description
        The current start angle

  @method _new_segmentTextFormatter
    @added 0.15.2
    @removed 1.0.0
    @description
      Sets the segment text formatter of the pie chart

    @arg value [Function]
      @description
        The segment text formatter to set

      @arg segment [Object]
        @description
          The segment to return text for

      @arg segments [Array[Object]]
        @description
          The array of all segments in the ring

      @returns [String]
        @description
          The formatted text.

    @returns [PieChart]
      @description
        This PieChart

  @method _new_segmentTextFormatter
    @added 0.15.2
    @removed 1.0.0
    @description
      Gets the current segment text formatter of the pie chart

    @returns [Function]
      @description
        The current segment text formatter

  @method labelValuesExtractor
    @added 0.15.2
    @description
      Sets the label values extractor of the pie chart

    @arg value [Function]
      @description
        The label values extractor to set

      @arg segment [Object]
        @description
          The current segment to show label data for

      @arg ring [Object]
        @description
          The current ring this label extractor has been applied to

      @arg pie [PieChart]
        @description
          The current pie chart

      @returns [Array[Object]]
        @property name [String]
          @description
            The name of the label entry

        @property value [Any]
          @description
            The value of the label entry

        @property formatter [Function]
          @decription
            @description
              A formatter function that can be used to format the value.

          @arg value [Any]
            @description
              The value to format

          @returns String
            @description
              The formatted string

    @returns [PieChart]
      @description
        This PieChart

  @method labelValuesExtractor
    @added 0.15.2
    @description
      Gets the current label values extractor of the pie chart

    @returns [Function]
      @description
        The current label values extractor

  @method labelRenderer
    @added 0.15.2
    @description
      Sets the label renderer of the pie chart

    @arg value [Function]
      @description
        The label renderer to set

      @arg element [HTMLElement]
        @description
          The container populated

      @arg data [Object]
        @description
          The data provided for rendering the label

    @returns [PieChart]
      @description
        This PieChart

  @method labelRenderer
    @added 0.15.2
    @description
      Gets the current label renderer of the pie chart

    @returns [Function]
      @description
        The current label renderer

  @method labelFormatter
    @added 0.15.2
    @description
      Sets the label formatter of the pie chart

    @arg value [Function]
      @description
        The label formatter to set

      @arg value [Number/String]
        @description
          The value point to format

      @returns [Number/String]
        @description
          The formatted value point

    @returns [PieChart]
      @description
        This PieChart

  @method labelFormatter
    @added 0.15.2
    @description
      Gets the current label formatter of the pie chart

    @returns [Function]
      @description
        The current label formatter

  @method data
    @added 0.15.2
    @description
      Gets the current data of the pie chart

    @returns [Object/Array[Object]]
      @description
        The current data

  @method data
    @added 0.15.2
    @description
      Sets the data this pie chart should display.

    @arg data [Object/Array[Object]]
      @description
        The data that describes the pie chart.

        The data should be of the form:

        @@codeblock js
          {
            title: "Pie Chart"
            segments: [
              {
                name: "Segment 1"
                size: 10,
                fillColor: hx.cycle(hx.color.graph, 0)
              },
              {
                name: "Segment 2"
                size: 10,
                fillColor: hx.cycle(hx.color.graph, 1)
              },
              {
                name: "Segment 3"
                size: 80,
                fillColor: hx.cycle(hx.color.graph, 2)
              }
            ]
          }

        For multi-ring pie charts, an array of the above object is expected:

        @@codeblock js
          [
            {
              title: "Series 1"
              segments: [
                {
                  name: "Segment 1",
                  size: 10,
                  fillColor: hx.cycle(hx.color.graph, 0)
                },
                {
                  name: "Segment 2",
                  size: 10,
                  fillColor: hx.cycle(hx.color.graph, 1)
                },
                {
                  name: "Segment 3",
                  size: 80,
                  fillColor: hx.cycle(hx.color.graph, 2)
                }
              ]
            },
            {
              name: "Series 2"
              segments: [
                {
                  name: "Segment 1",
                  size: 90,
                  fillColor: hx.cycle(hx.color.graph, 3)
                },
                {
                  name: "Segment 2",
                  size: 20,
                  fillColor: hx.cycle(hx.color.graph, 4)
                },
                {
                  name: "Segment 3",
                  size: 30,
                  fillColor: hx.cycle(hx.color.graph, 5)
                }
              ]
            },
            {
              name: "Series 3"
              segments: [
                {
                  name: "Segment 1",
                  size: 90,
                  fillColor: hx.cycle(hx.color.graph, 6)
                },
                {
                  name: "Segment 2",
                  size: 20,
                  fillColor: hx.cycle(hx.color.graph, 7)
                },
                {
                  name: "Segment 3",
                  size: 30,
                  fillColor: hx.cycle(hx.color.graph, 8)
                }
              ]
            }
          ]

  @method innerPadding
    @added 1.0.0
    @description
      Sets the inner padding of the pie chart

    @arg value [Number]
      @description
        The inner padding to set

    @returns [PieChart]
      @description
        This PieChart

  @method innerPadding
    @added 1.0.0
    @description
      Gets the current inner padding of the pie chart

    @returns [Number]
      @description
        The current inner padding

  @method segmentPadding
    @added 1.0.0
    @description
      Sets the segment padding of the pie chart

    @arg value [Number]
      @description
        The segment padding to set

    @returns [PieChart]
      @description
        This PieChart

  @method segmentPadding
    @added 1.0.0
    @description
      Gets the current segment padding of the pie chart

    @returns [Number]
      @description
        The current segment padding

  @method ringPadding
    @added 1.0.0
    @description
      Sets the ring padding of the pie chart

    @arg value [Number]
      @description
        The ring padding to set

    @returns [PieChart]
      @description
        This PieChart

  @method ringPadding
    @added 1.0.0
    @description
      Gets the current ring padding of the pie chart

    @returns [Number]
      @description
        The current ring padding

  @method totalAngle
    @added 1.0.0
    @description
      Sets the total angle of the pie chart

    @arg value [Number]
      @description
        The total angle to set

    @returns [PieChart]
      @description
        This PieChart

  @method totalAngle
    @added 1.0.0
    @description
      Gets the current total angle of the pie chart

    @returns [Number]
      @description
        The current total angle

  @method startAngle
    @added 1.0.0
    @description
      Sets the start angle of the pie chart

    @arg value [Number]
      @description
        The start angle to set

    @returns [PieChart]
      @description
        This PieChart

  @method startAngle
    @added 1.0.0
    @description
      Gets the current start angle of the pie chart

    @returns [Number]
      @description
        The current start angle

  @method segmentTextFormatter
    @added 1.0.0
    @description
      Sets the segment text formatter of the pie chart

    @arg value [Function]
      @description
        The segment text formatter to set

      @arg segment [Object]
        @description
          The segment to return text for

      @arg segments [Array[Object]]
        @description
          The array of all segments in the ring

      @returns [String]
        @description
          The formatted text.

    @returns [PieChart]
      @description
        This PieChart

  @method segmentTextFormatter
    @added 1.0.0
    @description
      Gets the current segment text formatter of the pie chart

    @returns [Function]
      @description
        The current segment text formatter

  @event click [Object]
    @description
      The event emitted when the pie chart is clicked.

    @property event
      @description
        The click event data.

    @property data
      @description
        The data of the segment that was clicked.

    @property series
      @description
        The series data for the pie chart or pie chart ring.

@class hx-plot-text-warm
  @added 0.10.0
  @description
    Applies the warm color from the graph color palette to text.

@class hx-plot-text-ambient
  @added 0.10.0
  @description
    Applies the ambient color from the graph color palette to text.

@class hx-plot-text-cold
  @added 0.10.0
  @description
    Applies the cold color from the graph color palette to text.

@class hx-plot-text-positive
  @added 0.10.0
  @description
    Applies the positive color from the graph color palette to text.

@class hx-plot-text-warning
  @added 0.10.0
  @description
    Applies the warning color from the graph color palette to text.

@class hx-plot-text-negative
  @added 0.10.0
  @description
    Applies the negative color from the graph color palette to text.

@class hx-plot-background-warm
  @added 0.10.0
  @description
    Applies the warm color from the graph color palette as a background color.

@class hx-plot-background-ambient
  @added 0.10.0
  @description
    Applies the ambient color from the graph color palette as a background color.

@class hx-plot-background-cold
  @added 0.10.0
  @description
    Applies the cold color from the graph color palette as a background color.

@class hx-plot-background-positive
  @added 0.10.0
  @description
    Applies the positive color from the graph color palette as a background color.

@class hx-plot-background-warning
  @added 0.10.0
  @description
    Applies the warning color from the graph color palette as a background color.

@class hx-plot-background-negative
  @added 0.10.0
  @description
    Applies the negative color from the graph color palette as a background color.

@function hx.plot
  @added 0.11.0
  @deprecated 0.15.2
    @description
      The standard api provides a more declarative way of constructing graphs via the options object, so this api is no longer needed.

  @removed 1.0.0
    @description
      The standard api provides a more declarative way of constructing graphs via the options object, so this api is no longer needed.

  @description
    Provides a function for declaring graphs as an object, as alternative to the builder pattern use by the rest of the plot api.

  @arg selector [String/HTMLElement/Selection]
    @description
      A css selector or HTMLElement that uniquely identifies the container within the page.

  @arg description [Object]
    @property type [String]
      @description
        Can currently be either 'pie' or 'graph'.

      @default
        graph

    @property? segmentPadding [Number]
      @description
        To be used when constructing pie charts. See the pie chart api for details.

    @property? innerPadding [Number]
      @description
        To be used when constructing pie charts. See the pie chart api for details.

    @property? ringPadding [Number]
      @description
        To be used when constructing pie charts. See the pie chart api for details.

    @property? totalAngle [Number]
      @description
        To be used when constructing pie charts. See the pie chart api for details.

    @property? startAngle [Number]
      @description
        To be used when constructing pie charts. See the pie chart api for details.

    @property? color [Number]
      @description
        To be used when constructing pie charts. See the pie chart api for details.

    @property? label [Number]
      @description
        To be used when constructing pie charts. See the pie chart api for details.

    @property? formatter [Function]
      @description
        To be used when constructing pie charts. See the pie chart api for details.

    @property? series [Object/Array[Object]]
      @description
        To be used when constructing pie charts. See the setData method on the PieChart prototype for details.

    @property? axes [Array[Object]]
      @description
        To be used when constructing graphs.

      @property? xVisible [Number]
        @description
          See the Axis api for details.

      @property? xFormatter [Function]
        @description
          See the Axis api for details.

      @property? xTickRotation [Number]
        @description
          See the Axis api for details.

      @property? xMin [Number]
        @description
          See the Axis api for details.

      @property? xMax [Number]
        @description
          See the Axis api for details.

      @property? xDiscretePadding [Number]
        @description
          See the Axis api for details.

      @property? xDiscreteLabels [Array[String]]
        @description
          See the Axis api for details.

      @property? xTickSpacing [Number]
        @description
          See the Axis api for details.

      @property? xTitle [String]
        @description
          See the Axis api for details.

      @property? xScalePaddingMin [Number]
        @description
          See the Axis api for details.

      @property? xScalePaddingMax [Number]
        @description
          See the Axis api for details.

      @property? xTicksAll [Boolean]
        @description
          See the Axis api for details.

      @property? xGridLines [Boolean]
        @description
          See the Axis api for details.

      @property? xNthTickVisible [Number]
        @description
          See the Axis api for details.

      @property? yVisible [Number]
        @description
          See the Axis api for details.

      @property? yFormatter [Function]
        @description
          See the Axis api for details.

      @property? yTickRotation [Number]
        @description
          See the Axis api for details.

      @property? yMin [Number]
        @description
          See the Axis api for details.

      @property? yMax [Number]
        @description
          See the Axis api for details.

      @property? yDiscretePadding [Number]
        @description
          See the Axis api for details.

      @property? yDiscreteLabels [Array[String]]
        @description
          See the Axis api for details.

      @property? yTickSpacing [Number]
        @description
          See the Axis api for details.

      @property? yTitle [String]
        @description
          See the Axis api for details.

      @property? yScalePaddingMin [Number]
        @description
          See the Axis api for details.

      @property? yScalePaddingMax [Number]
        @description
          See the Axis api for details.

      @property? yTicksAll [Boolean]
        @description
          See the Axis api for details.

      @property? yGridLines [Boolean]
        @description
          See the Axis api for details.

      @property? yNthTickVisible [Number]
        @description
          See the Axis api for details.

      @property? series [Array[Object]]
        @property? class [String]
          @description
            See the various Series prototypes for details.

        @property? stroke [Boolean]
          @description
            See the various Series prototypes for details.

        @property? color [String]
          @description
            See the various Series prototypes for details.

        @property? fill [Boolean]
          @description
            See the various Series prototypes for details.

        @property? fillColor [String]
          @description
            See the various Series prototypes for details.

        @property? feather [Number]
          @description
            See the various Series prototypes for details.

        @property? markers [Boolean]
          @description
            See the various Series prototypes for details.

        @property? markerRadius [Number]
          @description
            See the various Series prototypes for details.

        @property? markerColor [String]
          @description
            See the various Series prototypes for details.

        @property? group [String]
          @description
            See the various Series prototypes for details.

        @property? size [Number]
          @description
            See the various Series prototypes for details.

@condensed

@prototype hx.Sparkline
  @added 0.15.2
  @bugfix 1.0.4
    @issue 52
    @description
      Fix a bug where data with the same Y value caused an error with linear gradients

  @bugfix 1.5.1
    @issue 279
    @description
      Fixed the default @code[redrawOnResize] value

  @bugfix 1.6.0
    @issue 89
    @description
      Updated sparkline so that the labels show for the first/last points

  @description
    A function for creating a small, inline graph with with no visible axes or ticks.

  @constructor
    @description
    @arg selector [HTMLElement/String]
      @description
        An HTMLElement or CSS selector which selects the graph's container.

    @arg? options [Object]
      @description
        The options to use when creating the sparkline

      @property type [String]
        @description
          The type of sparkline to create. Can be 'bar' or 'line'

        @default
          'line'

      @property strokeColor [String]
        @description
          The stroke color to use. This only affects the 'line' type.

      @property fillColor [String]
        @description
          The fill color to use

      @property data [Array[Any]]
        @description
           An array of numbers - each number will be a data point in the sparkline.

      @property labelRenderer [Function]
        @added 1.0.0
        @description
          The label renderer for this series.

        @arg element [HTMLElement]
          @description
            The container populated

        @arg data [Object]
          @description
            The data provided for rendering the label

      @property data [Object]
        @added 1.0.0
        @description
           An array of {x, y} objects.

      @property redrawOnResize [Boolean]
        @added 1.5.0
          @issue 152
          @description
            Added an option to disable automatic redraw when container is resized.

        @description
          Whether or not the sparkline should automatically be redrawn when the container is resized. By default true.

      @property min [Number/String]
        @added 1.6.0
          @issue 261
          @description
            Added an option for setting the minimum y value for a sparkline

        @description
          The minimum value the y axis should show. If set to 'auto' the minimum value will calculated from the data in the series.

        @default
          'auto'

      @property max [Number/String]
        @added 1.6.0
          @issue 261
          @description
            Added an option for setting the maximum y value for a sparkline

        @description
          The maximum value the y axis should show. If set to 'auto' the maximum value will calculated from the data in the series.

        @default
          'auto'

  @method fillColor
    @description
      Gets the currently set fill color

    @returns [String]
      @description
        The currently set fill color

  @method fillColor
    @description
      Sets the fill color as a CSS color string

    @arg value [String]
      @description
        The color to set

    @returns [Sparkline]
      @description
        This Sparkline

  @method strokeColor
    @description
      Gets the currently set stroke color

    @returns [String]
      @description
        The currently set stroke color

  @method strokeColor
    @description
      Sets the stroke color as a CSS color string

    @arg value [String]
      @description
        The color to set

    @returns [Sparkline]
      @description
        This Sparkline

  @method data
    @description
      Gets the currently set data

    @returns [Array[Number]]
      @removed 1.0.0
        @description
          Now returns an array of objects

      @description
        The currently set data

    @returns [Array[Object]]
      @added 1.0.0
      @description
        The currently set data

  @method data
    @removed 1.0.0
      @description
        The data should now be supplied as an array of {x, y} objects

    @description
      Sets the data

    @arg value [Array[Number]]
      @description
        An array of numbers - each number will be a data point in the sparkline.

    @returns [Sparkline]
      @description
        This Sparkline

  @method render
    @description
      Renders the sparkline

    @returns [Sparkline]
      @description
        This Sparkline

  @method labelRenderer
    @added 1.0.0
    @description
      Gets the label renderer for this sparkline

    @returns [Function]
      @description
        The label renderer for this sparkline.

      @arg element [HTMLElement]
        @description
          The container populated

      @arg data [Object]
        @description
          The data provided for rendering the label

  @method labelRenderer
    @added 1.0.0
    @description
      Sets the label renderer for this sparkline

    @arg labelRenderer [Function]
      @description
        The label renderer for for this sparkline.

      @arg element [HTMLElement]
        @description
          The container populated

      @arg data [Object]
        @description
          The data provided for rendering the label

    @returns [Sparkline]
      @description
        This Sparkline

  @method data
    @added 1.0.0
    @description
      Sets the data

    @arg value [Array[Object]]
      @description
        An array of {x, y} objects.

    @returns [Sparkline]
      @description
        This Sparkline

  @method redrawOnResize
    @added 1.5.0
      @issue 152
      @description
        Added an option to disable automatic redraw when container is resized.

    @description
      Gets the currently set option for whether the sparkline should redraw on resizing the container

    @returns [Boolean]
      @description
        The currently set value for redrawOnResize

  @method redrawOnResize
    @added 1.5.0
      @issue 152
      @description
        Added an option to disable automatic redraw when container is resized.

    @description
      Sets the option for whether the sparkline should redraw on resizing the container

    @arg value [Boolean]
      @description
        Whether the sparkline should redraw on resizing the container

    @returns [Sparkline]
      @description
        This Sparkline


@function hx.pieChart
  @added 1.0.0
    @description
      Fluid api version of PieChart

  @description
    Creates a new PieChart set up on a detached element, wrapped in a selection

  @arg? options [Object]
    @description
      See the options object for constructing PieChart

  @returns [Selection]
    @description
      A selection containing an element with an PieChart initialised on it

@function hx.sparkline
  @added 1.0.0
    @description
      Fluid api version of Sparkline

  @description
    Creates a new Sparkline set up on a detached element, wrapped in a selection

  @arg? options [Object]
    @description
      See the options object for constructing Sparkline

  @returns [Selection]
    @description
      A selection containing an element with an Sparkline initialised on it


@function hx.graph
  @added 1.1.0
    @description
      Added a fluid api for graphs.

  @description
    Creates a new Graph, set up on a detached element, wrapped in a selection.

    Axes and series can be added using the options argument.

  @arg? options [Object]
    @description
      The options to use when setting up the graph.

      See the options defined in the @code[hx.Graph] prototype constructor for details on the available option

